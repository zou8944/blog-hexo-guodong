{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar_dufu.gif","path":"images/avatar_dufu.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicom-dufu.png","path":"images/favicom-dufu.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1514806389000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1514806389000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1514806389000},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1514806389000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1514806389000},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1514806389000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1514806389000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1514806389000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1514806389000},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1514806389000},{"_id":"themes/next/README.cn.md","hash":"58ffe752bc4b7f0069fcd6304bbc2d5ff7b80f89","modified":1514806389000},{"_id":"themes/next/README.md","hash":"898213e66d34a46c3cf8446bf693bd50db0d3269","modified":1514806389000},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1514806389000},{"_id":"themes/next/_config.yml","hash":"f59387643c6f2cbbd673ee3f4408efa09ace3eb2","modified":1567841881412},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1514806389000},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1514806389000},{"_id":"source/_posts/Git基础知识.md","hash":"ca1a127621cb4067029558f4e74307abb058b95f","modified":1567830056149},{"_id":"source/_posts/使用Django从零搭建一个小型站点.md","hash":"79feb67dada34300cf2b39b904ca30abcd359ce5","modified":1567827443586},{"_id":"source/_posts/我有点想要写博客了.md","hash":"21e59027eafe59363d4eab19c086a9b6b6a9075c","modified":1567827072904},{"_id":"source/about/index.md","hash":"db296dbcd41c4b669fa4abcf2301bc91556a9a40","modified":1567828843568},{"_id":"source/categories/index.md","hash":"e7766bb99f18eb5cfad56adee70999bd020f0841","modified":1567826979389},{"_id":"source/tags/index.md","hash":"d0e25970150787031b3a477f0609b75d288856b6","modified":1567827002601},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1514806389000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"352093a1b210c72136687fd2eee649244cee402c","modified":1514806389000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1514806389000},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1514806389000},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1514806389000},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1514806389000},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1514806389000},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1514806389000},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1514806389000},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1514806389000},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1514806389000},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1514806389000},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1514806389000},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1514806389000},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1514806389000},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1514806389000},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1514806389000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1514806389000},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1514806389000},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1514806389000},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1514806389000},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1514806389000},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1514806389000},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1514806389000},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1514806389000},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1514806389000},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1514806389000},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1514806389000},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1514806389000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1514806389000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1514806389000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1514806389000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1514806389000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1514806389000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1514806389000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1514806389000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1514806389000},{"_id":"themes/next/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1514806389000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1514806389000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1514806389000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1514806389000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1514806389000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1514806389000},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1514806389000},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1514806389000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1514806389000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1514806389000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1514806389000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1514806389000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1514806389000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1514806389000},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1514806389000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1514806389000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1514806389000},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1514806389000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1514806389000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1514806389000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1514806389000},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1514806389000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1514806389000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1514806389000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1514806389000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1514806389000},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1514806389000},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1514806389000},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1514806389000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1514806389000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1514806389000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1514806389000},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1514806389000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1567824376490},{"_id":"themes/next/source/images/avatar_dufu.gif","hash":"f74a9e804d61db81d4946861df9d5a62ad73299a","modified":1567825735594},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1514806389000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1514806389000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1514806389000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1514806389000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1514806389000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1514806389000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1514806389000},{"_id":"themes/next/source/images/favicom-dufu.png","hash":"1c6cf22c5ee54bbec40d0c058a02c6db964fef10","modified":1567825562867},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1514806389000},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1514806389000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1514806389000},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1514806389000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1514806389000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1514806389000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1514806389000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1514806389000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1514806389000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1514806389000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1514806389000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1514806389000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1514806389000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1514806389000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1514806389000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1514806389000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1514806389000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1514806389000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1514806389000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1514806389000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1514806389000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1514806389000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1514806389000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1514806389000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1514806389000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1514806389000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1514806389000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1514806389000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1514806389000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1514806389000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1514806389000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1514806389000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1514806389000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1514806389000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1514806389000},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1514806389000},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1514806389000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1514806389000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1514806389000},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1514806389000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1514806389000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1514806389000},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1514806389000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1514806389000},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1514806389000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1514806389000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1514806389000},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1514806389000},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1514806389000},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1514806389000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1514806389000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1514806389000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1514806389000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"02fb8fa6b6c252b6bed469539cd057716606a787","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1514806389000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1514806389000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1514806389000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1514806389000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1514806389000},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1514806389000}],"Category":[{"name":"Git","_id":"ck0985g8l0004r9bnz1tngbaf"},{"name":"python","_id":"ck0985g8p0008r9bniqewejz0"},{"name":"随笔","_id":"ck0985g8r000cr9bn599tnu2y"}],"Data":[],"Page":[{"title":"关于","date":"2019-09-07T03:35:10.000Z","_content":"# 我?\n叫我: 果冻\n代号: floyd; guodong; gd; zou8944\nEmail: zou-guo-dong@163.com\n\n# 关于这里\n2015年, 我是硬件狗, 一直想要写点什么, 开始接触博客, 试着写了一两篇, 没什么感觉, 于是放弃\n\n\n2016年, 还是硬件狗, 开始自学软件, 断断续续在CSDN上更新自己的学习笔记\n\n\n2017年, 程序猿变身中, 一整年没写过一片博客, 忙于应付各种琐碎和心理斗争\n\n\n2018年, 程序猿变身完成, 再次开始断断续续更新博客, 尽管质量不高, 但一篇1.8W访问量的日志让我为之振奋, 有一丢丢成就感\n\n\n2019年, 买了域名zouguodong.top, 买了云主机, 搭建一个属于自己的地方. 放肆地撒野.\n> \\# 更新于2019-09-07\n\n# 干过啥\n- 花两年时间尝试了硬件狗的滋味, 发现其实不喜欢\n- 一年半外包公司后端程序员, 练就了坐冷板凳自我激励的心态\n\n# 在干啥\n- 积累技术, 努力工作, 坚持学习, 认真生活\n- 多学语言, 多学思想\n- Java, Kotlin, Python, 异步","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2019-09-07 11:35:10\n---\n# 我?\n叫我: 果冻\n代号: floyd; guodong; gd; zou8944\nEmail: zou-guo-dong@163.com\n\n# 关于这里\n2015年, 我是硬件狗, 一直想要写点什么, 开始接触博客, 试着写了一两篇, 没什么感觉, 于是放弃\n\n\n2016年, 还是硬件狗, 开始自学软件, 断断续续在CSDN上更新自己的学习笔记\n\n\n2017年, 程序猿变身中, 一整年没写过一片博客, 忙于应付各种琐碎和心理斗争\n\n\n2018年, 程序猿变身完成, 再次开始断断续续更新博客, 尽管质量不高, 但一篇1.8W访问量的日志让我为之振奋, 有一丢丢成就感\n\n\n2019年, 买了域名zouguodong.top, 买了云主机, 搭建一个属于自己的地方. 放肆地撒野.\n> \\# 更新于2019-09-07\n\n# 干过啥\n- 花两年时间尝试了硬件狗的滋味, 发现其实不喜欢\n- 一年半外包公司后端程序员, 练就了坐冷板凳自我激励的心态\n\n# 在干啥\n- 积累技术, 努力工作, 坚持学习, 认真生活\n- 多学语言, 多学思想\n- Java, Kotlin, Python, 异步","updated":"2019-09-07T04:00:43.568Z","path":"about/index.html","comments":1,"layout":"page","_id":"ck0985g8i0001r9bnhyiwbbr7","content":"<h1 id=\"我\"><a href=\"#我\" class=\"headerlink\" title=\"我?\"></a>我?</h1><p>叫我: 果冻<br>代号: floyd; guodong; gd; zou8944<br>Email: <a href=\"mailto:zou-guo-dong@163.com\" target=\"_blank\" rel=\"noopener\">zou-guo-dong@163.com</a></p>\n<h1 id=\"关于这里\"><a href=\"#关于这里\" class=\"headerlink\" title=\"关于这里\"></a>关于这里</h1><p>2015年, 我是硬件狗, 一直想要写点什么, 开始接触博客, 试着写了一两篇, 没什么感觉, 于是放弃</p>\n<p>2016年, 还是硬件狗, 开始自学软件, 断断续续在CSDN上更新自己的学习笔记</p>\n<p>2017年, 程序猿变身中, 一整年没写过一片博客, 忙于应付各种琐碎和心理斗争</p>\n<p>2018年, 程序猿变身完成, 再次开始断断续续更新博客, 尽管质量不高, 但一篇1.8W访问量的日志让我为之振奋, 有一丢丢成就感</p>\n<p>2019年, 买了域名zouguodong.top, 买了云主机, 搭建一个属于自己的地方. 放肆地撒野.</p>\n<blockquote>\n<p># 更新于2019-09-07</p>\n</blockquote>\n<h1 id=\"干过啥\"><a href=\"#干过啥\" class=\"headerlink\" title=\"干过啥\"></a>干过啥</h1><ul>\n<li>花两年时间尝试了硬件狗的滋味, 发现其实不喜欢</li>\n<li>一年半外包公司后端程序员, 练就了坐冷板凳自我激励的心态</li>\n</ul>\n<h1 id=\"在干啥\"><a href=\"#在干啥\" class=\"headerlink\" title=\"在干啥\"></a>在干啥</h1><ul>\n<li>积累技术, 努力工作, 坚持学习, 认真生活</li>\n<li>多学语言, 多学思想</li>\n<li>Java, Kotlin, Python, 异步</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"我\"><a href=\"#我\" class=\"headerlink\" title=\"我?\"></a>我?</h1><p>叫我: 果冻<br>代号: floyd; guodong; gd; zou8944<br>Email: <a href=\"mailto:zou-guo-dong@163.com\" target=\"_blank\" rel=\"noopener\">zou-guo-dong@163.com</a></p>\n<h1 id=\"关于这里\"><a href=\"#关于这里\" class=\"headerlink\" title=\"关于这里\"></a>关于这里</h1><p>2015年, 我是硬件狗, 一直想要写点什么, 开始接触博客, 试着写了一两篇, 没什么感觉, 于是放弃</p>\n<p>2016年, 还是硬件狗, 开始自学软件, 断断续续在CSDN上更新自己的学习笔记</p>\n<p>2017年, 程序猿变身中, 一整年没写过一片博客, 忙于应付各种琐碎和心理斗争</p>\n<p>2018年, 程序猿变身完成, 再次开始断断续续更新博客, 尽管质量不高, 但一篇1.8W访问量的日志让我为之振奋, 有一丢丢成就感</p>\n<p>2019年, 买了域名zouguodong.top, 买了云主机, 搭建一个属于自己的地方. 放肆地撒野.</p>\n<blockquote>\n<p># 更新于2019-09-07</p>\n</blockquote>\n<h1 id=\"干过啥\"><a href=\"#干过啥\" class=\"headerlink\" title=\"干过啥\"></a>干过啥</h1><ul>\n<li>花两年时间尝试了硬件狗的滋味, 发现其实不喜欢</li>\n<li>一年半外包公司后端程序员, 练就了坐冷板凳自我激励的心态</li>\n</ul>\n<h1 id=\"在干啥\"><a href=\"#在干啥\" class=\"headerlink\" title=\"在干啥\"></a>在干啥</h1><ul>\n<li>积累技术, 努力工作, 坚持学习, 认真生活</li>\n<li>多学语言, 多学思想</li>\n<li>Java, Kotlin, Python, 异步</li>\n</ul>\n"},{"title":"分类","date":"2019-09-06T11:09:55.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2019-09-06 19:09:55\ntype: categories\n---\n","updated":"2019-09-07T03:29:39.389Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ck0985g8k0003r9bn7y7gf7ek","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2019-09-06T11:09:33.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2019-09-06 19:09:33\ntype: tags\n---\n","updated":"2019-09-07T03:30:02.601Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ck0985g8o0007r9bnyyaba3f2","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Git基础知识","date":"2018-02-15T14:31:33.000Z","_content":"## GIT简介\n1. 版本控制系统：即记录同一个文档在不同人和不同时间修改的各版本的系统，对于恢复文档、差异对比、协同工作有非常大的帮助。\n2. GIT是由linux创始人linus花费两周时间写成的，用于托管linux系统。目前已经有众多开源项目，如jQuery、PHP、Ruby等。\n<!-- more -->\n3. 集中式版本控制系统：以CVS、SVN为代表，版本库是集中存放在中央服务器的，在使用时候要先从服务器中取得最新版本，本地操作完成后还要上传给服务器，非常不方便，而且不安全。\n4. 分布式版本控制系统：以GIT为代表，没有集中式的中央服务器，每个人的电脑上都是一个完整的版本库，在工作完成之后只需要和其他同事交换修改的部分即可。具体工作方式还要实际体会。\n分布式在本地维护一个完整的库，因此不需要联网也可以工作，等有网络时再把本地库推送到远程库即可。\n\n## 基础知识\n1. 所有的版本控制系统只能跟踪文本文件的改动，如txt文件、网页、程序代码等，并且可以明确告诉你在什么地方改了什么。而图片、视频等二进制文件则没有办法跟踪其变化，只能告知文件的大小改变情况，但是不知道具体改了什么。而微软的word就是二进制格式，因此不能详细跟踪。\n基于以上原因，使用GIT时，就要以纯文本方式编写文件。\n2. 为了长久性和通用性考虑，编写文本时一定要通通使用UTF-8编码。\n3. 老司机寄语：千万不要用windows自带的记事本编辑任何文本文件。\n原因：记事本团队使用了一个非常弱智的行为来保存UTF-8编码的文件，他们自作聪明地在每个文件开头添加了0xefbbbf字符，对程序的编译之类的会造成错误。推荐使用Ntepad++\n4. Git的版本会退速度很快，因为其内部有个指向当前版本的指针HEAD，回退或前进时只是改变了HEAD指向的位置。\n5. 工作区和暂存区\n工作区：就是电脑上能够看到的目录（working directory）\n版本库：工作区内有一个隐藏目录 .git，这是Gti的版本库\n暂存区：Git的版本库中存了很多东西，最重要的就是成为stage（或者叫index）的缓存区。还有自动创建的第一个分支master，以及指向master的一个指针HEAD，如下图所示：\n\n    ![工作区、缓存区、版本库的关系](https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTgwMjE1MTU0OTA5ODgy?x-oss-process=image/format,png)\n\n    执行git add时，就是把文件修改添加到了缓存区；\n\n    执行git commit时，就是把缓存区的所有内容提交到当前分支。\n\n6. git每次提交的是修改，不是整个文件，因此执行“第一次修改 -> git add -> 第二次修改 -> git add -> git commit”这样的操作后，第二次修改是不会被提交的，因为第二次修改没有添加到暂存区。\n7. 在创建远程仓库之前，由于git和github之间是通过SSH加密传输的，因此要先创建SSH Key\n<font color=#0000ff><i>ssh-keygen -t rsa -C \"youremail@example.com\"</i></font>\n创建之后在用户主目录下面会生成两个文件：id_rsa、id_rsa.pub，其中id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以告诉任何人。\n为什么要SSH Key?\n因为github需要识别你推送的文件确实是你推送的，而不是别人冒充的，因此需要身份验证。也可任意添加多个Key，每个Key对应不同的电脑，添加之后你可以使用不同的电脑推送文件。\n本地生成SSH Key后，需要在github的个人账户中添加该公钥，这样才能正常使用。\n8. 添加远程库时，在创建一个repository后github会提示进行本地库的添加，按照提示来就好。\n9. 本地库在推送或从远程库提取东西时，支持两种协议：https和ssh，相比而言，ssh的速度更快。\n10. **分支的概念**\n分支就是科幻电影中的平行宇宙，当你在学习Git时，另一个你在另一个平行宇宙学习SVN，正常时两个宇宙互不干扰，但在某一个时间点，两个宇宙合并了，你就及学会了Git，又会了SVN。\n实际用途：开发新功能，需要两周，第一周写了50%，如果立刻提交，会导致代码库不完整，致使别人不能干活，如果等写完了再一起上传，又存在丢失每天进度的风险。有了分支后，可以创建一个专属于你的分支，别人看不到，你在自己的分支上工作，等工作完成后，再把你自己的分支一次性合并到原来的分支上。\ngit中维护方式：默认创建一个master分支，master分支指向提交，HEAD指向当前分支，默认是master，每次提交，master就向前移一步，随着不断提交，master分支的线越来越长。\n    ![这里写图片描述](https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTgwMjE1MTYwNTA3OTcx?x-oss-process=image/format,png)\n    当创建新的分支时，Git新建一个指针dev，指向master相同指向的提交，再把HEAD指向dev，就表示当前分支在dev上。之后对工作区的修改和提交就是针对dev分支了，重新提交一次后，dev指针往前移动一步，而master指针不变。\n    ![这里写图片描述](https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTgwMjE1MTYwNjExNzA5?x-oss-process=image/format,png)\n    此时要把dev合并到master上，最简单的方法就是将master指向dev的当前提交，完成合并。\n    ![这里写图片描述](https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTgwMjE1MTYwNjUzMjM2?x-oss-process=image/format,png)\n    由于git的分支管理使用的是指针的方式，因此切换和合并起来操作非常快捷。同时<font color=red>鼓励使用分支进行工作</font>，工作完成后再合并到master上，这样有助于提升master的安全性。\n11. **分支冲突**\n当创建一个分支dev，并且提交了一个修改，同时切换到master上对同一文件进行了修改并提交，在合并分支时很可能会发生冲突，无法完成自动合并，此时只有手动解决冲突再提交才能继续合并。合并后时间线就变成如下。\n    ![这里写图片描述](https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTgwMjE1MTYwODM4ODg1?x-oss-process=image/format,png)\n12. **分支的非快速合并方式**\n分支合并时，会默认使用ff(fast forward)模式进行合并，但这样带来的坏处是会丢掉分支信息。此时可以禁用ff模式，在merge时生成新的提交。\n如下是ff模式\n    ![这里写图片描述](https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTgwMjE1MTYxMDAwMzg1?x-oss-process=image/format,png)\n    如下是非ff模式\n    ![这里写图片描述](https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTgwMjE1MTYxMTM0Mzg5?x-oss-process=image/format,png)\n13. **分支策略**\n实际开发中管理分支的几个基本原则（还是要开发中实际应用才会有体会，现在体会不深）\n（1）master分支应该是稳定的，仅用来发布新版本，平时不能在上面干活\n（2）干活都在新建的dev分支上，dev是不稳定的，到版本发布时再将dev分支合并到master上\n（3）每个工作人员建立一个自己的分支，时不时在dev上进行合并就可以了。\n    ![这里写图片描述](https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTgwMjE1MTYxMTA5MjMw?x-oss-process=image/format,png)\n14. **BUG分支和feature分支**\n当我们临时解决一个BUG，或者增加一个新功能时，最好新建一个分支，待完成工作后再将该分支合并到工作分支中。\n15. 当你从远程仓库克隆时，Git自动把本地master分支和远程的master分支对应起来，并且远程仓库的默认名称是origin。可以把本地的分支往远程推送，推送完成后远程库的分支结构就基本和本地一样了，但是也可以不必把所有的分支推送，这个要看实际需求。\n16. **多人协作的情况（需要实际体会）**\n（1）首先，可以试图用<font color=green><i>git push origin branch-name</i></font>推送自己的修改；\n（2）如果推送失败，则因为远程分支比你的本地更新，需要先用<font color=green><i>git pull</i></font>抓取到本地试图合并；\n（3）如果合并有冲突，则解决冲突，并在本地提交；\n（4）没有冲突或者解决掉冲突后，再用<font color=green><i>git push origin branch-name</i></font>推送就能成功！\n注意：如果git pull提示“no tracking information”，则说明本地分支和远程分支的链接关系没有创建，用命令<font color=green><i>git branch --set-upstream branch-name origin/branch-name。</i></font>\n17. 标签\n通常在版本库中打一个标签（tag），将来任何时候都可以按照标签名称来取某个时刻的历史版本。tag实际上是指向某个commit的指针，与分支不同的是，标签不能移动。可以理解为标签是固定在某一时刻的commit的指针。目的是能够很快地找到某一时刻的commit，而不用记复杂的commit id\n18. 在github上参与别人的开源项目\n    - 访问项目主页，点击fork，在自己的账号下克隆一个相同的仓库。\n    - 按照正常克隆的方式从自己的账号下克隆到本地，此时开源项目、你的远程库和本地库关系如下。\n    ![这里写图片描述](https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTgwMjE1MTYxODA4NDk0?x-oss-process=image/format,png)\n\n    - 本地修改后推送到自己账号的远程库\n    - 要想把自己修改的点推送给开源项目，可以在自己账号发起pull request。\n19. 忽略特殊文件\n有不想提交的文件时候，可以编写.gitignore文件，将不想提交的文件写到.gitignore文件中，这样在提交时候就会忽略该文件。注意文件名就是“.gitignore”，前面没有东西的。\n20. 添加.gitignore文件后没有效果解决办法\n原因：.gitignore只能忽略那些原来没有被track的文件，如果某些文件已经被纳入了版本管理中，则修改.gitignore是无效的。解决的办法就是先把本地缓存删除，改成未track状态，然后提交。\n（1）先将所有文件提交到Git\n（2）在Git根目录执行以下命令\n<font color=green><i>git rm -r --cached .</i></font>\n<font color=green><i>git add .</i></font>\n<font color=green><i>git commit -m \"fixed untracked files\".</i></font>\n1. 配置\n配置git时，加上--global是针对当前用户起作用的，如果不加就只对当前仓库起作用。\n每个仓库的配置文件都放在.git/config中，对整个仓库起作用。\n用户的配置恩见放在用户主目录下的一个隐藏文件/gitconfig中，对用户的所有仓库起作用\n可以直接修改配置文件，如果改错了可以删掉文件重新通过命令进行配置。\n<font color=red>鼓励进行别名的配置。</font>\n2. 自己搭建Git服务器\nGit功能强大，但是github并不是必须的，他只是作为一个一直开着的服务器而已，且兼有社区的作用。如果想要自己的代码不开源，又要用Git，那么可以自己搭建一个Git服务器。搭建方式[看这里](http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137583770360579bc4b458f044ce7afed3df579123eca000)\n3. 其它\n[Git官方网站](http://git-scm.com)\n[Git cheat sheet](https://pan.baidu.com/s/1kU5OCOB#list/path=%2Fpub%2Fgit)","source":"_posts/Git基础知识.md","raw":"---\ntitle: Git基础知识\ndate: 2018-02-15 22:31:33\ntags: \n    - git\ncategories: \n    - Git\n---\n## GIT简介\n1. 版本控制系统：即记录同一个文档在不同人和不同时间修改的各版本的系统，对于恢复文档、差异对比、协同工作有非常大的帮助。\n2. GIT是由linux创始人linus花费两周时间写成的，用于托管linux系统。目前已经有众多开源项目，如jQuery、PHP、Ruby等。\n<!-- more -->\n3. 集中式版本控制系统：以CVS、SVN为代表，版本库是集中存放在中央服务器的，在使用时候要先从服务器中取得最新版本，本地操作完成后还要上传给服务器，非常不方便，而且不安全。\n4. 分布式版本控制系统：以GIT为代表，没有集中式的中央服务器，每个人的电脑上都是一个完整的版本库，在工作完成之后只需要和其他同事交换修改的部分即可。具体工作方式还要实际体会。\n分布式在本地维护一个完整的库，因此不需要联网也可以工作，等有网络时再把本地库推送到远程库即可。\n\n## 基础知识\n1. 所有的版本控制系统只能跟踪文本文件的改动，如txt文件、网页、程序代码等，并且可以明确告诉你在什么地方改了什么。而图片、视频等二进制文件则没有办法跟踪其变化，只能告知文件的大小改变情况，但是不知道具体改了什么。而微软的word就是二进制格式，因此不能详细跟踪。\n基于以上原因，使用GIT时，就要以纯文本方式编写文件。\n2. 为了长久性和通用性考虑，编写文本时一定要通通使用UTF-8编码。\n3. 老司机寄语：千万不要用windows自带的记事本编辑任何文本文件。\n原因：记事本团队使用了一个非常弱智的行为来保存UTF-8编码的文件，他们自作聪明地在每个文件开头添加了0xefbbbf字符，对程序的编译之类的会造成错误。推荐使用Ntepad++\n4. Git的版本会退速度很快，因为其内部有个指向当前版本的指针HEAD，回退或前进时只是改变了HEAD指向的位置。\n5. 工作区和暂存区\n工作区：就是电脑上能够看到的目录（working directory）\n版本库：工作区内有一个隐藏目录 .git，这是Gti的版本库\n暂存区：Git的版本库中存了很多东西，最重要的就是成为stage（或者叫index）的缓存区。还有自动创建的第一个分支master，以及指向master的一个指针HEAD，如下图所示：\n\n    ![工作区、缓存区、版本库的关系](https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTgwMjE1MTU0OTA5ODgy?x-oss-process=image/format,png)\n\n    执行git add时，就是把文件修改添加到了缓存区；\n\n    执行git commit时，就是把缓存区的所有内容提交到当前分支。\n\n6. git每次提交的是修改，不是整个文件，因此执行“第一次修改 -> git add -> 第二次修改 -> git add -> git commit”这样的操作后，第二次修改是不会被提交的，因为第二次修改没有添加到暂存区。\n7. 在创建远程仓库之前，由于git和github之间是通过SSH加密传输的，因此要先创建SSH Key\n<font color=#0000ff><i>ssh-keygen -t rsa -C \"youremail@example.com\"</i></font>\n创建之后在用户主目录下面会生成两个文件：id_rsa、id_rsa.pub，其中id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以告诉任何人。\n为什么要SSH Key?\n因为github需要识别你推送的文件确实是你推送的，而不是别人冒充的，因此需要身份验证。也可任意添加多个Key，每个Key对应不同的电脑，添加之后你可以使用不同的电脑推送文件。\n本地生成SSH Key后，需要在github的个人账户中添加该公钥，这样才能正常使用。\n8. 添加远程库时，在创建一个repository后github会提示进行本地库的添加，按照提示来就好。\n9. 本地库在推送或从远程库提取东西时，支持两种协议：https和ssh，相比而言，ssh的速度更快。\n10. **分支的概念**\n分支就是科幻电影中的平行宇宙，当你在学习Git时，另一个你在另一个平行宇宙学习SVN，正常时两个宇宙互不干扰，但在某一个时间点，两个宇宙合并了，你就及学会了Git，又会了SVN。\n实际用途：开发新功能，需要两周，第一周写了50%，如果立刻提交，会导致代码库不完整，致使别人不能干活，如果等写完了再一起上传，又存在丢失每天进度的风险。有了分支后，可以创建一个专属于你的分支，别人看不到，你在自己的分支上工作，等工作完成后，再把你自己的分支一次性合并到原来的分支上。\ngit中维护方式：默认创建一个master分支，master分支指向提交，HEAD指向当前分支，默认是master，每次提交，master就向前移一步，随着不断提交，master分支的线越来越长。\n    ![这里写图片描述](https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTgwMjE1MTYwNTA3OTcx?x-oss-process=image/format,png)\n    当创建新的分支时，Git新建一个指针dev，指向master相同指向的提交，再把HEAD指向dev，就表示当前分支在dev上。之后对工作区的修改和提交就是针对dev分支了，重新提交一次后，dev指针往前移动一步，而master指针不变。\n    ![这里写图片描述](https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTgwMjE1MTYwNjExNzA5?x-oss-process=image/format,png)\n    此时要把dev合并到master上，最简单的方法就是将master指向dev的当前提交，完成合并。\n    ![这里写图片描述](https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTgwMjE1MTYwNjUzMjM2?x-oss-process=image/format,png)\n    由于git的分支管理使用的是指针的方式，因此切换和合并起来操作非常快捷。同时<font color=red>鼓励使用分支进行工作</font>，工作完成后再合并到master上，这样有助于提升master的安全性。\n11. **分支冲突**\n当创建一个分支dev，并且提交了一个修改，同时切换到master上对同一文件进行了修改并提交，在合并分支时很可能会发生冲突，无法完成自动合并，此时只有手动解决冲突再提交才能继续合并。合并后时间线就变成如下。\n    ![这里写图片描述](https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTgwMjE1MTYwODM4ODg1?x-oss-process=image/format,png)\n12. **分支的非快速合并方式**\n分支合并时，会默认使用ff(fast forward)模式进行合并，但这样带来的坏处是会丢掉分支信息。此时可以禁用ff模式，在merge时生成新的提交。\n如下是ff模式\n    ![这里写图片描述](https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTgwMjE1MTYxMDAwMzg1?x-oss-process=image/format,png)\n    如下是非ff模式\n    ![这里写图片描述](https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTgwMjE1MTYxMTM0Mzg5?x-oss-process=image/format,png)\n13. **分支策略**\n实际开发中管理分支的几个基本原则（还是要开发中实际应用才会有体会，现在体会不深）\n（1）master分支应该是稳定的，仅用来发布新版本，平时不能在上面干活\n（2）干活都在新建的dev分支上，dev是不稳定的，到版本发布时再将dev分支合并到master上\n（3）每个工作人员建立一个自己的分支，时不时在dev上进行合并就可以了。\n    ![这里写图片描述](https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTgwMjE1MTYxMTA5MjMw?x-oss-process=image/format,png)\n14. **BUG分支和feature分支**\n当我们临时解决一个BUG，或者增加一个新功能时，最好新建一个分支，待完成工作后再将该分支合并到工作分支中。\n15. 当你从远程仓库克隆时，Git自动把本地master分支和远程的master分支对应起来，并且远程仓库的默认名称是origin。可以把本地的分支往远程推送，推送完成后远程库的分支结构就基本和本地一样了，但是也可以不必把所有的分支推送，这个要看实际需求。\n16. **多人协作的情况（需要实际体会）**\n（1）首先，可以试图用<font color=green><i>git push origin branch-name</i></font>推送自己的修改；\n（2）如果推送失败，则因为远程分支比你的本地更新，需要先用<font color=green><i>git pull</i></font>抓取到本地试图合并；\n（3）如果合并有冲突，则解决冲突，并在本地提交；\n（4）没有冲突或者解决掉冲突后，再用<font color=green><i>git push origin branch-name</i></font>推送就能成功！\n注意：如果git pull提示“no tracking information”，则说明本地分支和远程分支的链接关系没有创建，用命令<font color=green><i>git branch --set-upstream branch-name origin/branch-name。</i></font>\n17. 标签\n通常在版本库中打一个标签（tag），将来任何时候都可以按照标签名称来取某个时刻的历史版本。tag实际上是指向某个commit的指针，与分支不同的是，标签不能移动。可以理解为标签是固定在某一时刻的commit的指针。目的是能够很快地找到某一时刻的commit，而不用记复杂的commit id\n18. 在github上参与别人的开源项目\n    - 访问项目主页，点击fork，在自己的账号下克隆一个相同的仓库。\n    - 按照正常克隆的方式从自己的账号下克隆到本地，此时开源项目、你的远程库和本地库关系如下。\n    ![这里写图片描述](https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTgwMjE1MTYxODA4NDk0?x-oss-process=image/format,png)\n\n    - 本地修改后推送到自己账号的远程库\n    - 要想把自己修改的点推送给开源项目，可以在自己账号发起pull request。\n19. 忽略特殊文件\n有不想提交的文件时候，可以编写.gitignore文件，将不想提交的文件写到.gitignore文件中，这样在提交时候就会忽略该文件。注意文件名就是“.gitignore”，前面没有东西的。\n20. 添加.gitignore文件后没有效果解决办法\n原因：.gitignore只能忽略那些原来没有被track的文件，如果某些文件已经被纳入了版本管理中，则修改.gitignore是无效的。解决的办法就是先把本地缓存删除，改成未track状态，然后提交。\n（1）先将所有文件提交到Git\n（2）在Git根目录执行以下命令\n<font color=green><i>git rm -r --cached .</i></font>\n<font color=green><i>git add .</i></font>\n<font color=green><i>git commit -m \"fixed untracked files\".</i></font>\n1. 配置\n配置git时，加上--global是针对当前用户起作用的，如果不加就只对当前仓库起作用。\n每个仓库的配置文件都放在.git/config中，对整个仓库起作用。\n用户的配置恩见放在用户主目录下的一个隐藏文件/gitconfig中，对用户的所有仓库起作用\n可以直接修改配置文件，如果改错了可以删掉文件重新通过命令进行配置。\n<font color=red>鼓励进行别名的配置。</font>\n2. 自己搭建Git服务器\nGit功能强大，但是github并不是必须的，他只是作为一个一直开着的服务器而已，且兼有社区的作用。如果想要自己的代码不开源，又要用Git，那么可以自己搭建一个Git服务器。搭建方式[看这里](http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137583770360579bc4b458f044ce7afed3df579123eca000)\n3. 其它\n[Git官方网站](http://git-scm.com)\n[Git cheat sheet](https://pan.baidu.com/s/1kU5OCOB#list/path=%2Fpub%2Fgit)","slug":"Git基础知识","published":1,"updated":"2019-09-07T04:20:56.149Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0985g8f0000r9bn3q6u3b0m","content":"<h2 id=\"GIT简介\"><a href=\"#GIT简介\" class=\"headerlink\" title=\"GIT简介\"></a>GIT简介</h2><ol>\n<li>版本控制系统：即记录同一个文档在不同人和不同时间修改的各版本的系统，对于恢复文档、差异对比、协同工作有非常大的帮助。</li>\n<li>GIT是由linux创始人linus花费两周时间写成的，用于托管linux系统。目前已经有众多开源项目，如jQuery、PHP、Ruby等。<a id=\"more\"></a></li>\n<li>集中式版本控制系统：以CVS、SVN为代表，版本库是集中存放在中央服务器的，在使用时候要先从服务器中取得最新版本，本地操作完成后还要上传给服务器，非常不方便，而且不安全。</li>\n<li>分布式版本控制系统：以GIT为代表，没有集中式的中央服务器，每个人的电脑上都是一个完整的版本库，在工作完成之后只需要和其他同事交换修改的部分即可。具体工作方式还要实际体会。<br>分布式在本地维护一个完整的库，因此不需要联网也可以工作，等有网络时再把本地库推送到远程库即可。</li>\n</ol>\n<h2 id=\"基础知识\"><a href=\"#基础知识\" class=\"headerlink\" title=\"基础知识\"></a>基础知识</h2><ol>\n<li><p>所有的版本控制系统只能跟踪文本文件的改动，如txt文件、网页、程序代码等，并且可以明确告诉你在什么地方改了什么。而图片、视频等二进制文件则没有办法跟踪其变化，只能告知文件的大小改变情况，但是不知道具体改了什么。而微软的word就是二进制格式，因此不能详细跟踪。<br>基于以上原因，使用GIT时，就要以纯文本方式编写文件。</p>\n</li>\n<li><p>为了长久性和通用性考虑，编写文本时一定要通通使用UTF-8编码。</p>\n</li>\n<li><p>老司机寄语：千万不要用windows自带的记事本编辑任何文本文件。<br>原因：记事本团队使用了一个非常弱智的行为来保存UTF-8编码的文件，他们自作聪明地在每个文件开头添加了0xefbbbf字符，对程序的编译之类的会造成错误。推荐使用Ntepad++</p>\n</li>\n<li><p>Git的版本会退速度很快，因为其内部有个指向当前版本的指针HEAD，回退或前进时只是改变了HEAD指向的位置。</p>\n</li>\n<li><p>工作区和暂存区<br>工作区：就是电脑上能够看到的目录（working directory）<br>版本库：工作区内有一个隐藏目录 .git，这是Gti的版本库<br>暂存区：Git的版本库中存了很多东西，最重要的就是成为stage（或者叫index）的缓存区。还有自动创建的第一个分支master，以及指向master的一个指针HEAD，如下图所示：</p>\n<p> <img src=\"https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTgwMjE1MTU0OTA5ODgy?x-oss-process=image/format,png\" alt=\"工作区、缓存区、版本库的关系\"></p>\n<p> 执行git add时，就是把文件修改添加到了缓存区；</p>\n<p> 执行git commit时，就是把缓存区的所有内容提交到当前分支。</p>\n</li>\n<li><p>git每次提交的是修改，不是整个文件，因此执行“第一次修改 -&gt; git add -&gt; 第二次修改 -&gt; git add -&gt; git commit”这样的操作后，第二次修改是不会被提交的，因为第二次修改没有添加到暂存区。</p>\n</li>\n<li><p>在创建远程仓库之前，由于git和github之间是通过SSH加密传输的，因此要先创建SSH Key<br><font color=\"#0000ff\"><i>ssh-keygen -t rsa -C “<a href=\"mailto:youremail@example.com\" target=\"_blank\" rel=\"noopener\">youremail@example.com</a>“</i></font><br>创建之后在用户主目录下面会生成两个文件：id_rsa、id_rsa.pub，其中id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以告诉任何人。<br>为什么要SSH Key?<br>因为github需要识别你推送的文件确实是你推送的，而不是别人冒充的，因此需要身份验证。也可任意添加多个Key，每个Key对应不同的电脑，添加之后你可以使用不同的电脑推送文件。<br>本地生成SSH Key后，需要在github的个人账户中添加该公钥，这样才能正常使用。</p>\n</li>\n<li><p>添加远程库时，在创建一个repository后github会提示进行本地库的添加，按照提示来就好。</p>\n</li>\n<li><p>本地库在推送或从远程库提取东西时，支持两种协议：https和ssh，相比而言，ssh的速度更快。</p>\n</li>\n<li><p><strong>分支的概念</strong><br>分支就是科幻电影中的平行宇宙，当你在学习Git时，另一个你在另一个平行宇宙学习SVN，正常时两个宇宙互不干扰，但在某一个时间点，两个宇宙合并了，你就及学会了Git，又会了SVN。<br>实际用途：开发新功能，需要两周，第一周写了50%，如果立刻提交，会导致代码库不完整，致使别人不能干活，如果等写完了再一起上传，又存在丢失每天进度的风险。有了分支后，可以创建一个专属于你的分支，别人看不到，你在自己的分支上工作，等工作完成后，再把你自己的分支一次性合并到原来的分支上。<br>git中维护方式：默认创建一个master分支，master分支指向提交，HEAD指向当前分支，默认是master，每次提交，master就向前移一步，随着不断提交，master分支的线越来越长。<br><img src=\"https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTgwMjE1MTYwNTA3OTcx?x-oss-process=image/format,png\" alt=\"这里写图片描述\"><br>当创建新的分支时，Git新建一个指针dev，指向master相同指向的提交，再把HEAD指向dev，就表示当前分支在dev上。之后对工作区的修改和提交就是针对dev分支了，重新提交一次后，dev指针往前移动一步，而master指针不变。<br><img src=\"https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTgwMjE1MTYwNjExNzA5?x-oss-process=image/format,png\" alt=\"这里写图片描述\"><br>此时要把dev合并到master上，最简单的方法就是将master指向dev的当前提交，完成合并。<br><img src=\"https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTgwMjE1MTYwNjUzMjM2?x-oss-process=image/format,png\" alt=\"这里写图片描述\"><br>由于git的分支管理使用的是指针的方式，因此切换和合并起来操作非常快捷。同时<font color=\"red\">鼓励使用分支进行工作</font>，工作完成后再合并到master上，这样有助于提升master的安全性。</p>\n</li>\n<li><p><strong>分支冲突</strong><br>当创建一个分支dev，并且提交了一个修改，同时切换到master上对同一文件进行了修改并提交，在合并分支时很可能会发生冲突，无法完成自动合并，此时只有手动解决冲突再提交才能继续合并。合并后时间线就变成如下。<br><img src=\"https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTgwMjE1MTYwODM4ODg1?x-oss-process=image/format,png\" alt=\"这里写图片描述\"></p>\n</li>\n<li><p><strong>分支的非快速合并方式</strong><br>分支合并时，会默认使用ff(fast forward)模式进行合并，但这样带来的坏处是会丢掉分支信息。此时可以禁用ff模式，在merge时生成新的提交。<br>如下是ff模式<br><img src=\"https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTgwMjE1MTYxMDAwMzg1?x-oss-process=image/format,png\" alt=\"这里写图片描述\"><br>如下是非ff模式<br><img src=\"https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTgwMjE1MTYxMTM0Mzg5?x-oss-process=image/format,png\" alt=\"这里写图片描述\"></p>\n</li>\n<li><p><strong>分支策略</strong><br>实际开发中管理分支的几个基本原则（还是要开发中实际应用才会有体会，现在体会不深）<br>（1）master分支应该是稳定的，仅用来发布新版本，平时不能在上面干活<br>（2）干活都在新建的dev分支上，dev是不稳定的，到版本发布时再将dev分支合并到master上<br>（3）每个工作人员建立一个自己的分支，时不时在dev上进行合并就可以了。<br><img src=\"https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTgwMjE1MTYxMTA5MjMw?x-oss-process=image/format,png\" alt=\"这里写图片描述\"></p>\n</li>\n<li><p><strong>BUG分支和feature分支</strong><br>当我们临时解决一个BUG，或者增加一个新功能时，最好新建一个分支，待完成工作后再将该分支合并到工作分支中。</p>\n</li>\n<li><p>当你从远程仓库克隆时，Git自动把本地master分支和远程的master分支对应起来，并且远程仓库的默认名称是origin。可以把本地的分支往远程推送，推送完成后远程库的分支结构就基本和本地一样了，但是也可以不必把所有的分支推送，这个要看实际需求。</p>\n</li>\n<li><p><strong>多人协作的情况（需要实际体会）</strong><br>（1）首先，可以试图用<font color=\"green\"><i>git push origin branch-name</i></font>推送自己的修改；<br>（2）如果推送失败，则因为远程分支比你的本地更新，需要先用<font color=\"green\"><i>git pull</i></font>抓取到本地试图合并；<br>（3）如果合并有冲突，则解决冲突，并在本地提交；<br>（4）没有冲突或者解决掉冲突后，再用<font color=\"green\"><i>git push origin branch-name</i></font>推送就能成功！<br>注意：如果git pull提示“no tracking information”，则说明本地分支和远程分支的链接关系没有创建，用命令<font color=\"green\"><i>git branch –set-upstream branch-name origin/branch-name。</i></font></p>\n</li>\n<li><p>标签<br>通常在版本库中打一个标签（tag），将来任何时候都可以按照标签名称来取某个时刻的历史版本。tag实际上是指向某个commit的指针，与分支不同的是，标签不能移动。可以理解为标签是固定在某一时刻的commit的指针。目的是能够很快地找到某一时刻的commit，而不用记复杂的commit id</p>\n</li>\n<li><p>在github上参与别人的开源项目</p>\n<ul>\n<li><p>访问项目主页，点击fork，在自己的账号下克隆一个相同的仓库。</p>\n</li>\n<li><p>按照正常克隆的方式从自己的账号下克隆到本地，此时开源项目、你的远程库和本地库关系如下。<br><img src=\"https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTgwMjE1MTYxODA4NDk0?x-oss-process=image/format,png\" alt=\"这里写图片描述\"></p>\n</li>\n<li><p>本地修改后推送到自己账号的远程库</p>\n</li>\n<li><p>要想把自己修改的点推送给开源项目，可以在自己账号发起pull request。</p>\n</li>\n</ul>\n</li>\n<li><p>忽略特殊文件<br>有不想提交的文件时候，可以编写.gitignore文件，将不想提交的文件写到.gitignore文件中，这样在提交时候就会忽略该文件。注意文件名就是“.gitignore”，前面没有东西的。</p>\n</li>\n<li><p>添加.gitignore文件后没有效果解决办法<br>原因：.gitignore只能忽略那些原来没有被track的文件，如果某些文件已经被纳入了版本管理中，则修改.gitignore是无效的。解决的办法就是先把本地缓存删除，改成未track状态，然后提交。<br>（1）先将所有文件提交到Git<br>（2）在Git根目录执行以下命令<br><font color=\"green\"><i>git rm -r –cached .</i></font><br><font color=\"green\"><i>git add .</i></font><br><font color=\"green\"><i>git commit -m “fixed untracked files”.</i></font></p>\n</li>\n<li><p>配置<br>配置git时，加上–global是针对当前用户起作用的，如果不加就只对当前仓库起作用。<br>每个仓库的配置文件都放在.git/config中，对整个仓库起作用。<br>用户的配置恩见放在用户主目录下的一个隐藏文件/gitconfig中，对用户的所有仓库起作用<br>可以直接修改配置文件，如果改错了可以删掉文件重新通过命令进行配置。<br><font color=\"red\">鼓励进行别名的配置。</font></p>\n</li>\n<li><p>自己搭建Git服务器<br>Git功能强大，但是github并不是必须的，他只是作为一个一直开着的服务器而已，且兼有社区的作用。如果想要自己的代码不开源，又要用Git，那么可以自己搭建一个Git服务器。搭建方式<a href=\"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137583770360579bc4b458f044ce7afed3df579123eca000\" target=\"_blank\" rel=\"noopener\">看这里</a></p>\n</li>\n<li><p>其它<br><a href=\"http://git-scm.com\" target=\"_blank\" rel=\"noopener\">Git官方网站</a><br><a href=\"https://pan.baidu.com/s/1kU5OCOB#list/path=%2Fpub%2Fgit\" target=\"_blank\" rel=\"noopener\">Git cheat sheet</a></p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<h2 id=\"GIT简介\"><a href=\"#GIT简介\" class=\"headerlink\" title=\"GIT简介\"></a>GIT简介</h2><ol>\n<li>版本控制系统：即记录同一个文档在不同人和不同时间修改的各版本的系统，对于恢复文档、差异对比、协同工作有非常大的帮助。</li>\n<li>GIT是由linux创始人linus花费两周时间写成的，用于托管linux系统。目前已经有众多开源项目，如jQuery、PHP、Ruby等。","more":"</li>\n<li>集中式版本控制系统：以CVS、SVN为代表，版本库是集中存放在中央服务器的，在使用时候要先从服务器中取得最新版本，本地操作完成后还要上传给服务器，非常不方便，而且不安全。</li>\n<li>分布式版本控制系统：以GIT为代表，没有集中式的中央服务器，每个人的电脑上都是一个完整的版本库，在工作完成之后只需要和其他同事交换修改的部分即可。具体工作方式还要实际体会。<br>分布式在本地维护一个完整的库，因此不需要联网也可以工作，等有网络时再把本地库推送到远程库即可。</li>\n</ol>\n<h2 id=\"基础知识\"><a href=\"#基础知识\" class=\"headerlink\" title=\"基础知识\"></a>基础知识</h2><ol>\n<li><p>所有的版本控制系统只能跟踪文本文件的改动，如txt文件、网页、程序代码等，并且可以明确告诉你在什么地方改了什么。而图片、视频等二进制文件则没有办法跟踪其变化，只能告知文件的大小改变情况，但是不知道具体改了什么。而微软的word就是二进制格式，因此不能详细跟踪。<br>基于以上原因，使用GIT时，就要以纯文本方式编写文件。</p>\n</li>\n<li><p>为了长久性和通用性考虑，编写文本时一定要通通使用UTF-8编码。</p>\n</li>\n<li><p>老司机寄语：千万不要用windows自带的记事本编辑任何文本文件。<br>原因：记事本团队使用了一个非常弱智的行为来保存UTF-8编码的文件，他们自作聪明地在每个文件开头添加了0xefbbbf字符，对程序的编译之类的会造成错误。推荐使用Ntepad++</p>\n</li>\n<li><p>Git的版本会退速度很快，因为其内部有个指向当前版本的指针HEAD，回退或前进时只是改变了HEAD指向的位置。</p>\n</li>\n<li><p>工作区和暂存区<br>工作区：就是电脑上能够看到的目录（working directory）<br>版本库：工作区内有一个隐藏目录 .git，这是Gti的版本库<br>暂存区：Git的版本库中存了很多东西，最重要的就是成为stage（或者叫index）的缓存区。还有自动创建的第一个分支master，以及指向master的一个指针HEAD，如下图所示：</p>\n<p> <img src=\"https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTgwMjE1MTU0OTA5ODgy?x-oss-process=image/format,png\" alt=\"工作区、缓存区、版本库的关系\"></p>\n<p> 执行git add时，就是把文件修改添加到了缓存区；</p>\n<p> 执行git commit时，就是把缓存区的所有内容提交到当前分支。</p>\n</li>\n<li><p>git每次提交的是修改，不是整个文件，因此执行“第一次修改 -&gt; git add -&gt; 第二次修改 -&gt; git add -&gt; git commit”这样的操作后，第二次修改是不会被提交的，因为第二次修改没有添加到暂存区。</p>\n</li>\n<li><p>在创建远程仓库之前，由于git和github之间是通过SSH加密传输的，因此要先创建SSH Key<br><font color=\"#0000ff\"><i>ssh-keygen -t rsa -C “<a href=\"mailto:youremail@example.com\" target=\"_blank\" rel=\"noopener\">youremail@example.com</a>“</i></font><br>创建之后在用户主目录下面会生成两个文件：id_rsa、id_rsa.pub，其中id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以告诉任何人。<br>为什么要SSH Key?<br>因为github需要识别你推送的文件确实是你推送的，而不是别人冒充的，因此需要身份验证。也可任意添加多个Key，每个Key对应不同的电脑，添加之后你可以使用不同的电脑推送文件。<br>本地生成SSH Key后，需要在github的个人账户中添加该公钥，这样才能正常使用。</p>\n</li>\n<li><p>添加远程库时，在创建一个repository后github会提示进行本地库的添加，按照提示来就好。</p>\n</li>\n<li><p>本地库在推送或从远程库提取东西时，支持两种协议：https和ssh，相比而言，ssh的速度更快。</p>\n</li>\n<li><p><strong>分支的概念</strong><br>分支就是科幻电影中的平行宇宙，当你在学习Git时，另一个你在另一个平行宇宙学习SVN，正常时两个宇宙互不干扰，但在某一个时间点，两个宇宙合并了，你就及学会了Git，又会了SVN。<br>实际用途：开发新功能，需要两周，第一周写了50%，如果立刻提交，会导致代码库不完整，致使别人不能干活，如果等写完了再一起上传，又存在丢失每天进度的风险。有了分支后，可以创建一个专属于你的分支，别人看不到，你在自己的分支上工作，等工作完成后，再把你自己的分支一次性合并到原来的分支上。<br>git中维护方式：默认创建一个master分支，master分支指向提交，HEAD指向当前分支，默认是master，每次提交，master就向前移一步，随着不断提交，master分支的线越来越长。<br><img src=\"https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTgwMjE1MTYwNTA3OTcx?x-oss-process=image/format,png\" alt=\"这里写图片描述\"><br>当创建新的分支时，Git新建一个指针dev，指向master相同指向的提交，再把HEAD指向dev，就表示当前分支在dev上。之后对工作区的修改和提交就是针对dev分支了，重新提交一次后，dev指针往前移动一步，而master指针不变。<br><img src=\"https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTgwMjE1MTYwNjExNzA5?x-oss-process=image/format,png\" alt=\"这里写图片描述\"><br>此时要把dev合并到master上，最简单的方法就是将master指向dev的当前提交，完成合并。<br><img src=\"https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTgwMjE1MTYwNjUzMjM2?x-oss-process=image/format,png\" alt=\"这里写图片描述\"><br>由于git的分支管理使用的是指针的方式，因此切换和合并起来操作非常快捷。同时<font color=\"red\">鼓励使用分支进行工作</font>，工作完成后再合并到master上，这样有助于提升master的安全性。</p>\n</li>\n<li><p><strong>分支冲突</strong><br>当创建一个分支dev，并且提交了一个修改，同时切换到master上对同一文件进行了修改并提交，在合并分支时很可能会发生冲突，无法完成自动合并，此时只有手动解决冲突再提交才能继续合并。合并后时间线就变成如下。<br><img src=\"https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTgwMjE1MTYwODM4ODg1?x-oss-process=image/format,png\" alt=\"这里写图片描述\"></p>\n</li>\n<li><p><strong>分支的非快速合并方式</strong><br>分支合并时，会默认使用ff(fast forward)模式进行合并，但这样带来的坏处是会丢掉分支信息。此时可以禁用ff模式，在merge时生成新的提交。<br>如下是ff模式<br><img src=\"https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTgwMjE1MTYxMDAwMzg1?x-oss-process=image/format,png\" alt=\"这里写图片描述\"><br>如下是非ff模式<br><img src=\"https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTgwMjE1MTYxMTM0Mzg5?x-oss-process=image/format,png\" alt=\"这里写图片描述\"></p>\n</li>\n<li><p><strong>分支策略</strong><br>实际开发中管理分支的几个基本原则（还是要开发中实际应用才会有体会，现在体会不深）<br>（1）master分支应该是稳定的，仅用来发布新版本，平时不能在上面干活<br>（2）干活都在新建的dev分支上，dev是不稳定的，到版本发布时再将dev分支合并到master上<br>（3）每个工作人员建立一个自己的分支，时不时在dev上进行合并就可以了。<br><img src=\"https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTgwMjE1MTYxMTA5MjMw?x-oss-process=image/format,png\" alt=\"这里写图片描述\"></p>\n</li>\n<li><p><strong>BUG分支和feature分支</strong><br>当我们临时解决一个BUG，或者增加一个新功能时，最好新建一个分支，待完成工作后再将该分支合并到工作分支中。</p>\n</li>\n<li><p>当你从远程仓库克隆时，Git自动把本地master分支和远程的master分支对应起来，并且远程仓库的默认名称是origin。可以把本地的分支往远程推送，推送完成后远程库的分支结构就基本和本地一样了，但是也可以不必把所有的分支推送，这个要看实际需求。</p>\n</li>\n<li><p><strong>多人协作的情况（需要实际体会）</strong><br>（1）首先，可以试图用<font color=\"green\"><i>git push origin branch-name</i></font>推送自己的修改；<br>（2）如果推送失败，则因为远程分支比你的本地更新，需要先用<font color=\"green\"><i>git pull</i></font>抓取到本地试图合并；<br>（3）如果合并有冲突，则解决冲突，并在本地提交；<br>（4）没有冲突或者解决掉冲突后，再用<font color=\"green\"><i>git push origin branch-name</i></font>推送就能成功！<br>注意：如果git pull提示“no tracking information”，则说明本地分支和远程分支的链接关系没有创建，用命令<font color=\"green\"><i>git branch –set-upstream branch-name origin/branch-name。</i></font></p>\n</li>\n<li><p>标签<br>通常在版本库中打一个标签（tag），将来任何时候都可以按照标签名称来取某个时刻的历史版本。tag实际上是指向某个commit的指针，与分支不同的是，标签不能移动。可以理解为标签是固定在某一时刻的commit的指针。目的是能够很快地找到某一时刻的commit，而不用记复杂的commit id</p>\n</li>\n<li><p>在github上参与别人的开源项目</p>\n<ul>\n<li><p>访问项目主页，点击fork，在自己的账号下克隆一个相同的仓库。</p>\n</li>\n<li><p>按照正常克隆的方式从自己的账号下克隆到本地，此时开源项目、你的远程库和本地库关系如下。<br><img src=\"https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTgwMjE1MTYxODA4NDk0?x-oss-process=image/format,png\" alt=\"这里写图片描述\"></p>\n</li>\n<li><p>本地修改后推送到自己账号的远程库</p>\n</li>\n<li><p>要想把自己修改的点推送给开源项目，可以在自己账号发起pull request。</p>\n</li>\n</ul>\n</li>\n<li><p>忽略特殊文件<br>有不想提交的文件时候，可以编写.gitignore文件，将不想提交的文件写到.gitignore文件中，这样在提交时候就会忽略该文件。注意文件名就是“.gitignore”，前面没有东西的。</p>\n</li>\n<li><p>添加.gitignore文件后没有效果解决办法<br>原因：.gitignore只能忽略那些原来没有被track的文件，如果某些文件已经被纳入了版本管理中，则修改.gitignore是无效的。解决的办法就是先把本地缓存删除，改成未track状态，然后提交。<br>（1）先将所有文件提交到Git<br>（2）在Git根目录执行以下命令<br><font color=\"green\"><i>git rm -r –cached .</i></font><br><font color=\"green\"><i>git add .</i></font><br><font color=\"green\"><i>git commit -m “fixed untracked files”.</i></font></p>\n</li>\n<li><p>配置<br>配置git时，加上–global是针对当前用户起作用的，如果不加就只对当前仓库起作用。<br>每个仓库的配置文件都放在.git/config中，对整个仓库起作用。<br>用户的配置恩见放在用户主目录下的一个隐藏文件/gitconfig中，对用户的所有仓库起作用<br>可以直接修改配置文件，如果改错了可以删掉文件重新通过命令进行配置。<br><font color=\"red\">鼓励进行别名的配置。</font></p>\n</li>\n<li><p>自己搭建Git服务器<br>Git功能强大，但是github并不是必须的，他只是作为一个一直开着的服务器而已，且兼有社区的作用。如果想要自己的代码不开源，又要用Git，那么可以自己搭建一个Git服务器。搭建方式<a href=\"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137583770360579bc4b458f044ce7afed3df579123eca000\" target=\"_blank\" rel=\"noopener\">看这里</a></p>\n</li>\n<li><p>其它<br><a href=\"http://git-scm.com\" target=\"_blank\" rel=\"noopener\">Git官方网站</a><br><a href=\"https://pan.baidu.com/s/1kU5OCOB#list/path=%2Fpub%2Fgit\" target=\"_blank\" rel=\"noopener\">Git cheat sheet</a></p>\n</li>\n</ol>"},{"title":"使用Django从零搭建一个小型站点","date":"2019-09-06T14:35:24.000Z","_content":"## 要有project\n\n创建一个基本的Project, 这样我们才能开始工作\n\n```shell\ndjango-admin startproject <工程名>\n```\n<!-- more -->\n## 要能访问数据库\n\nDjango说, 要访问数据库必须创建app和model, 于是, 我们开始创建\n\n- 首先配置好数据库\n\n  在settings.py中加上自己的数据库配置\n\n  ```python\n  DATABASES = {   \n      'default': {        \n          'ENGINE': 'django.db.backends.sqlite3',       \n          'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),    \n      },   \n      # 如下是我的配置\n      'test': {      \n          'ENGINE': 'django.db.backends.mysql',      \n          'NAME': 'test',      \n          'USER': 'test',        \n          'PASSWORD': 'test123',     \n          'HOST':'localhost',      \n          'PORT':'3306',   \n      }\n  }\n  ```\n\n- 然后定义好模型\n\n  在manager.py文件同目录下, 执行如下命令创建app\n\n  ```shell\n  django-admin startapp KnowledgePayModel\n  ```\n\n  然后可以看到如下目录结构\n\n  [外链图片转存失败(img-hy2fdU5Z-1566125816334)(/home/floyd/.config/Typora/typora-user-images/1566014155470.png)]\n\n  然后在project的settings.py下注册刚刚创建的APP\n\n  ```python\n  INSTALLED_APPS = [\n      'django.contrib.admin',\n      'django.contrib.auth',\n      'django.contrib.contenttypes',\n      'django.contrib.sessions',\n      'django.contrib.messages',\n      'django.contrib.staticfiles',\n      # 这是我们自己创建的APP\n      'KnowledgePayModel',\n  ]\n  ```\n\n  然后执行如下命令从现有数据表中导出模型\n\n  ```shell\n  python manager.py inspectdb 表名\n  ```\n\n  我使用django + psycopg2 2.8.3执行上述命令时出现如下错误\n\n  ```python\n  from django.db import models\n  # Unable to inspect table 'payalbum'\n  # The error was: sequence index must be integer, not 'slice'\n  # Unable to inspect table 'paycomment'\n  # The error was: sequence index must be integer, not 'slice'\n  # Unable to inspect table 'payprice'\n  # The error was: sequence index must be integer, not 'slice'\n  # Unable to inspect table 'payvideo'\n  # The error was: sequence index must be integer, not 'slice'\n  ```\n\n  网上查询是版本兼容有问题, 于是将psycopg强制降级\n\n  ```shell\n  sudo pip install psycopg2==2.7.7 --force-reinstall\n  ```\n\n  然后就可以正常工作了, 结果如下, 将其复制到models.py中, 然后进行适当的修改即可使用. 注意生成的AutoField一定要指定为主键, 否则Django会认为没有主键, 从在再隐式给你加一个, 然后就会报说一个model中只能有一个AutoField域.\n\n  ```python\n  # This is an auto-generated Django model module.\n  # You'll have to do the following manually to clean this up:\n  #   * Rearrange models' order\n  #   * Make sure each model has one field with primary_key=True\n  #   * Make sure each ForeignKey has `on_delete` set to the desired behavior.\n  #   * Remove `managed = False` lines if you wish to allow Django to create, modify, and delete the table\n  # Feel free to rename the models, but don't rename db_table values or field names.\n  from __future__ import unicode_literals\n  \n  from django.db import models\n  \n  class Payalbum(models.Model):\n      id = models.AutoField()\n      data = models.TextField()  # This field type is a guess.\n  \n      class Meta:\n          managed = False\n          db_table = 'payalbum'\n  \n  class Paycomment(models.Model):\n      id = models.AutoField()\n      data = models.TextField()  # This field type is a guess.\n  \n      class Meta:\n          managed = False\n          db_table = 'paycomment'\n  \n  class Payprice(models.Model):\n      id = models.AutoField()\n      data = models.TextField()  # This field type is a guess.\n  \n      class Meta:\n          managed = False\n          db_table = 'payprice'\n  \n  class Payvideo(models.Model):\n      id = models.AutoField()\n      data = models.TextField()  # This field type is a guess.\n  \n      class Meta:\n          managed = False\n          db_table = 'payvideo'\n  ```\n\n  如果想要使用Django自带的权限表之类的, 需要执行如下语句, 来生成一系列表\n\n  ```shell\n  python manager.py migrate\n  ```\n\n  控制台执行结果如下:\n\n  ```shell\n  Operations to perform:\n    Apply all migrations: admin, auth, contenttypes, sessions\n  Running migrations:\n    Applying contenttypes.0001_initial... OK\n    Applying auth.0001_initial... OK\n    Applying admin.0001_initial... OK\n    Applying admin.0002_logentry_remove_auto_add... OK\n    Applying contenttypes.0002_remove_content_type_name... OK\n    Applying auth.0002_alter_permission_name_max_length... OK\n    Applying auth.0003_alter_user_email_max_length... OK\n    Applying auth.0004_alter_user_username_opts... OK\n    Applying auth.0005_alter_user_last_login_null... OK\n    Applying auth.0006_require_contenttypes_0002... OK\n    Applying auth.0007_alter_validators_add_error_messages... OK\n    Applying auth.0008_alter_user_username_max_length... OK\n    Applying sessions.0001_initial... OK\n  \n  ```\n\n\n## 要有静态资源\n\n将所有静态资源全部放入templates\n修改settings.py中的静态文件位置配置\n\n```python\nSTATIC_URL = '/templates/'\nSTATICFILES_DIRS = (\n    os.path.join(BASE_DIR, \"templates\"),\n)\n```\n\n在TEMPLATES的DIRS项中增加templates文件夹\n\n```python\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        # 只有这个templates是我添加的哦\n        'DIRS': ['templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n```\n\n## 要有路由\n\n在project的urls.py文件中添加我们的路由\n\n```python\nurlpatterns = [\n    url(r'^admin/', admin.site.urls),\n    # 将knowledgepay这个url导向server这个app,让它自己处理\n    url(r'^knowledgepay/', include('server.urls', namespace=\"server\")),\n]\n```\n\n在我们自己的app中创建一个urls.py, 定义app内部自己的路由\n\n```python\n# 这是app内部的路由\nurlpatterns = [\n    url(r'^$', views.homepage),\n    url(r'^home', views.homepage),\n]\n```\n\n在我们自己app的views.py文件中定义各种视图处理器\n\n```python\n# Create your views here.\ndef homepage(request):\n    return render_to_response('login.html')\n```\n\n## 发挥吧\n\n上面已经把基本的框架都搭好了.我们已经可以\n\n- 可以对url进行路由\n- 可以访问静态html文件\n- 可以访问数据库\n- 可以访问自定义的逻辑处理方法\n\n剩下的就是纯粹业务上的事情了.\n\n## 参考资料\n\n如果觉得上面有些地方前后没有联系起来, 那么可以结合下面这个简单的菜鸟教程看看\n\nhttps://www.runoob.com/django/django-tutorial.html\n\n要详细了解, 这里还有Djang中文版文档可供参阅\n\nhttps://docs.djangoproject.com/zh-hans/2.2/intro/\n\n当然这里还有Django book的中文版翻译, 供君选择\n\nhttp://docs.30c.org/djangobook2/index.html\n","source":"_posts/使用Django从零搭建一个小型站点.md","raw":"---\ntitle: 使用Django从零搭建一个小型站点\ndate: 2019-09-06 22:35:24\ntags: \n    - django\ncategories: \n    - python\n---\n## 要有project\n\n创建一个基本的Project, 这样我们才能开始工作\n\n```shell\ndjango-admin startproject <工程名>\n```\n<!-- more -->\n## 要能访问数据库\n\nDjango说, 要访问数据库必须创建app和model, 于是, 我们开始创建\n\n- 首先配置好数据库\n\n  在settings.py中加上自己的数据库配置\n\n  ```python\n  DATABASES = {   \n      'default': {        \n          'ENGINE': 'django.db.backends.sqlite3',       \n          'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),    \n      },   \n      # 如下是我的配置\n      'test': {      \n          'ENGINE': 'django.db.backends.mysql',      \n          'NAME': 'test',      \n          'USER': 'test',        \n          'PASSWORD': 'test123',     \n          'HOST':'localhost',      \n          'PORT':'3306',   \n      }\n  }\n  ```\n\n- 然后定义好模型\n\n  在manager.py文件同目录下, 执行如下命令创建app\n\n  ```shell\n  django-admin startapp KnowledgePayModel\n  ```\n\n  然后可以看到如下目录结构\n\n  [外链图片转存失败(img-hy2fdU5Z-1566125816334)(/home/floyd/.config/Typora/typora-user-images/1566014155470.png)]\n\n  然后在project的settings.py下注册刚刚创建的APP\n\n  ```python\n  INSTALLED_APPS = [\n      'django.contrib.admin',\n      'django.contrib.auth',\n      'django.contrib.contenttypes',\n      'django.contrib.sessions',\n      'django.contrib.messages',\n      'django.contrib.staticfiles',\n      # 这是我们自己创建的APP\n      'KnowledgePayModel',\n  ]\n  ```\n\n  然后执行如下命令从现有数据表中导出模型\n\n  ```shell\n  python manager.py inspectdb 表名\n  ```\n\n  我使用django + psycopg2 2.8.3执行上述命令时出现如下错误\n\n  ```python\n  from django.db import models\n  # Unable to inspect table 'payalbum'\n  # The error was: sequence index must be integer, not 'slice'\n  # Unable to inspect table 'paycomment'\n  # The error was: sequence index must be integer, not 'slice'\n  # Unable to inspect table 'payprice'\n  # The error was: sequence index must be integer, not 'slice'\n  # Unable to inspect table 'payvideo'\n  # The error was: sequence index must be integer, not 'slice'\n  ```\n\n  网上查询是版本兼容有问题, 于是将psycopg强制降级\n\n  ```shell\n  sudo pip install psycopg2==2.7.7 --force-reinstall\n  ```\n\n  然后就可以正常工作了, 结果如下, 将其复制到models.py中, 然后进行适当的修改即可使用. 注意生成的AutoField一定要指定为主键, 否则Django会认为没有主键, 从在再隐式给你加一个, 然后就会报说一个model中只能有一个AutoField域.\n\n  ```python\n  # This is an auto-generated Django model module.\n  # You'll have to do the following manually to clean this up:\n  #   * Rearrange models' order\n  #   * Make sure each model has one field with primary_key=True\n  #   * Make sure each ForeignKey has `on_delete` set to the desired behavior.\n  #   * Remove `managed = False` lines if you wish to allow Django to create, modify, and delete the table\n  # Feel free to rename the models, but don't rename db_table values or field names.\n  from __future__ import unicode_literals\n  \n  from django.db import models\n  \n  class Payalbum(models.Model):\n      id = models.AutoField()\n      data = models.TextField()  # This field type is a guess.\n  \n      class Meta:\n          managed = False\n          db_table = 'payalbum'\n  \n  class Paycomment(models.Model):\n      id = models.AutoField()\n      data = models.TextField()  # This field type is a guess.\n  \n      class Meta:\n          managed = False\n          db_table = 'paycomment'\n  \n  class Payprice(models.Model):\n      id = models.AutoField()\n      data = models.TextField()  # This field type is a guess.\n  \n      class Meta:\n          managed = False\n          db_table = 'payprice'\n  \n  class Payvideo(models.Model):\n      id = models.AutoField()\n      data = models.TextField()  # This field type is a guess.\n  \n      class Meta:\n          managed = False\n          db_table = 'payvideo'\n  ```\n\n  如果想要使用Django自带的权限表之类的, 需要执行如下语句, 来生成一系列表\n\n  ```shell\n  python manager.py migrate\n  ```\n\n  控制台执行结果如下:\n\n  ```shell\n  Operations to perform:\n    Apply all migrations: admin, auth, contenttypes, sessions\n  Running migrations:\n    Applying contenttypes.0001_initial... OK\n    Applying auth.0001_initial... OK\n    Applying admin.0001_initial... OK\n    Applying admin.0002_logentry_remove_auto_add... OK\n    Applying contenttypes.0002_remove_content_type_name... OK\n    Applying auth.0002_alter_permission_name_max_length... OK\n    Applying auth.0003_alter_user_email_max_length... OK\n    Applying auth.0004_alter_user_username_opts... OK\n    Applying auth.0005_alter_user_last_login_null... OK\n    Applying auth.0006_require_contenttypes_0002... OK\n    Applying auth.0007_alter_validators_add_error_messages... OK\n    Applying auth.0008_alter_user_username_max_length... OK\n    Applying sessions.0001_initial... OK\n  \n  ```\n\n\n## 要有静态资源\n\n将所有静态资源全部放入templates\n修改settings.py中的静态文件位置配置\n\n```python\nSTATIC_URL = '/templates/'\nSTATICFILES_DIRS = (\n    os.path.join(BASE_DIR, \"templates\"),\n)\n```\n\n在TEMPLATES的DIRS项中增加templates文件夹\n\n```python\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        # 只有这个templates是我添加的哦\n        'DIRS': ['templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n```\n\n## 要有路由\n\n在project的urls.py文件中添加我们的路由\n\n```python\nurlpatterns = [\n    url(r'^admin/', admin.site.urls),\n    # 将knowledgepay这个url导向server这个app,让它自己处理\n    url(r'^knowledgepay/', include('server.urls', namespace=\"server\")),\n]\n```\n\n在我们自己的app中创建一个urls.py, 定义app内部自己的路由\n\n```python\n# 这是app内部的路由\nurlpatterns = [\n    url(r'^$', views.homepage),\n    url(r'^home', views.homepage),\n]\n```\n\n在我们自己app的views.py文件中定义各种视图处理器\n\n```python\n# Create your views here.\ndef homepage(request):\n    return render_to_response('login.html')\n```\n\n## 发挥吧\n\n上面已经把基本的框架都搭好了.我们已经可以\n\n- 可以对url进行路由\n- 可以访问静态html文件\n- 可以访问数据库\n- 可以访问自定义的逻辑处理方法\n\n剩下的就是纯粹业务上的事情了.\n\n## 参考资料\n\n如果觉得上面有些地方前后没有联系起来, 那么可以结合下面这个简单的菜鸟教程看看\n\nhttps://www.runoob.com/django/django-tutorial.html\n\n要详细了解, 这里还有Djang中文版文档可供参阅\n\nhttps://docs.djangoproject.com/zh-hans/2.2/intro/\n\n当然这里还有Django book的中文版翻译, 供君选择\n\nhttp://docs.30c.org/djangobook2/index.html\n","slug":"使用Django从零搭建一个小型站点","published":1,"updated":"2019-09-07T03:37:23.586Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0985g8j0002r9bnnafyrvmj","content":"<h2 id=\"要有project\"><a href=\"#要有project\" class=\"headerlink\" title=\"要有project\"></a>要有project</h2><p>创建一个基本的Project, 这样我们才能开始工作</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">django-admin startproject &lt;工程名&gt;</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n<h2 id=\"要能访问数据库\"><a href=\"#要能访问数据库\" class=\"headerlink\" title=\"要能访问数据库\"></a>要能访问数据库</h2><p>Django说, 要访问数据库必须创建app和model, 于是, 我们开始创建</p>\n<ul>\n<li><p>首先配置好数据库</p>\n<p>在settings.py中加上自己的数据库配置</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DATABASES = &#123;   </span><br><span class=\"line\">    <span class=\"string\">'default'</span>: &#123;        </span><br><span class=\"line\">        <span class=\"string\">'ENGINE'</span>: <span class=\"string\">'django.db.backends.sqlite3'</span>,       </span><br><span class=\"line\">        <span class=\"string\">'NAME'</span>: os.path.join(BASE_DIR, <span class=\"string\">'db.sqlite3'</span>),    </span><br><span class=\"line\">    &#125;,   </span><br><span class=\"line\">    <span class=\"comment\"># 如下是我的配置</span></span><br><span class=\"line\">    <span class=\"string\">'test'</span>: &#123;      </span><br><span class=\"line\">        <span class=\"string\">'ENGINE'</span>: <span class=\"string\">'django.db.backends.mysql'</span>,      </span><br><span class=\"line\">        <span class=\"string\">'NAME'</span>: <span class=\"string\">'test'</span>,      </span><br><span class=\"line\">        <span class=\"string\">'USER'</span>: <span class=\"string\">'test'</span>,        </span><br><span class=\"line\">        <span class=\"string\">'PASSWORD'</span>: <span class=\"string\">'test123'</span>,     </span><br><span class=\"line\">        <span class=\"string\">'HOST'</span>:<span class=\"string\">'localhost'</span>,      </span><br><span class=\"line\">        <span class=\"string\">'PORT'</span>:<span class=\"string\">'3306'</span>,   </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>然后定义好模型</p>\n<p>在manager.py文件同目录下, 执行如下命令创建app</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">django-admin startapp KnowledgePayModel</span><br></pre></td></tr></table></figure>\n\n<p>然后可以看到如下目录结构</p>\n<p>[外链图片转存失败(img-hy2fdU5Z-1566125816334)(/home/floyd/.config/Typora/typora-user-images/1566014155470.png)]</p>\n<p>然后在project的settings.py下注册刚刚创建的APP</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INSTALLED_APPS = [</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.admin'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.auth'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.contenttypes'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.sessions'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.messages'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.staticfiles'</span>,</span><br><span class=\"line\">    <span class=\"comment\"># 这是我们自己创建的APP</span></span><br><span class=\"line\">    <span class=\"string\">'KnowledgePayModel'</span>,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<p>然后执行如下命令从现有数据表中导出模型</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python manager.py inspectdb 表名</span><br></pre></td></tr></table></figure>\n\n<p>我使用django + psycopg2 2.8.3执行上述命令时出现如下错误</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.db <span class=\"keyword\">import</span> models</span><br><span class=\"line\"><span class=\"comment\"># Unable to inspect table 'payalbum'</span></span><br><span class=\"line\"><span class=\"comment\"># The error was: sequence index must be integer, not 'slice'</span></span><br><span class=\"line\"><span class=\"comment\"># Unable to inspect table 'paycomment'</span></span><br><span class=\"line\"><span class=\"comment\"># The error was: sequence index must be integer, not 'slice'</span></span><br><span class=\"line\"><span class=\"comment\"># Unable to inspect table 'payprice'</span></span><br><span class=\"line\"><span class=\"comment\"># The error was: sequence index must be integer, not 'slice'</span></span><br><span class=\"line\"><span class=\"comment\"># Unable to inspect table 'payvideo'</span></span><br><span class=\"line\"><span class=\"comment\"># The error was: sequence index must be integer, not 'slice'</span></span><br></pre></td></tr></table></figure>\n\n<p>网上查询是版本兼容有问题, 于是将psycopg强制降级</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo pip install psycopg2==2.7.7 --force-reinstall</span><br></pre></td></tr></table></figure>\n\n<p>然后就可以正常工作了, 结果如下, 将其复制到models.py中, 然后进行适当的修改即可使用. 注意生成的AutoField一定要指定为主键, 否则Django会认为没有主键, 从在再隐式给你加一个, 然后就会报说一个model中只能有一个AutoField域.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># This is an auto-generated Django model module.</span></span><br><span class=\"line\"><span class=\"comment\"># You'll have to do the following manually to clean this up:</span></span><br><span class=\"line\"><span class=\"comment\">#   * Rearrange models' order</span></span><br><span class=\"line\"><span class=\"comment\">#   * Make sure each model has one field with primary_key=True</span></span><br><span class=\"line\"><span class=\"comment\">#   * Make sure each ForeignKey has `on_delete` set to the desired behavior.</span></span><br><span class=\"line\"><span class=\"comment\">#   * Remove `managed = False` lines if you wish to allow Django to create, modify, and delete the table</span></span><br><span class=\"line\"><span class=\"comment\"># Feel free to rename the models, but don't rename db_table values or field names.</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> __future__ <span class=\"keyword\">import</span> unicode_literals</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> django.db <span class=\"keyword\">import</span> models</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Payalbum</span><span class=\"params\">(models.Model)</span>:</span></span><br><span class=\"line\">    id = models.AutoField()</span><br><span class=\"line\">    data = models.TextField()  <span class=\"comment\"># This field type is a guess.</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Meta</span>:</span></span><br><span class=\"line\">        managed = <span class=\"literal\">False</span></span><br><span class=\"line\">        db_table = <span class=\"string\">'payalbum'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Paycomment</span><span class=\"params\">(models.Model)</span>:</span></span><br><span class=\"line\">    id = models.AutoField()</span><br><span class=\"line\">    data = models.TextField()  <span class=\"comment\"># This field type is a guess.</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Meta</span>:</span></span><br><span class=\"line\">        managed = <span class=\"literal\">False</span></span><br><span class=\"line\">        db_table = <span class=\"string\">'paycomment'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Payprice</span><span class=\"params\">(models.Model)</span>:</span></span><br><span class=\"line\">    id = models.AutoField()</span><br><span class=\"line\">    data = models.TextField()  <span class=\"comment\"># This field type is a guess.</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Meta</span>:</span></span><br><span class=\"line\">        managed = <span class=\"literal\">False</span></span><br><span class=\"line\">        db_table = <span class=\"string\">'payprice'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Payvideo</span><span class=\"params\">(models.Model)</span>:</span></span><br><span class=\"line\">    id = models.AutoField()</span><br><span class=\"line\">    data = models.TextField()  <span class=\"comment\"># This field type is a guess.</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Meta</span>:</span></span><br><span class=\"line\">        managed = <span class=\"literal\">False</span></span><br><span class=\"line\">        db_table = <span class=\"string\">'payvideo'</span></span><br></pre></td></tr></table></figure>\n\n<p>如果想要使用Django自带的权限表之类的, 需要执行如下语句, 来生成一系列表</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python manager.py migrate</span><br></pre></td></tr></table></figure>\n\n<p>控制台执行结果如下:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Operations to perform:</span><br><span class=\"line\">  Apply all migrations: admin, auth, contenttypes, sessions</span><br><span class=\"line\">Running migrations:</span><br><span class=\"line\">  Applying contenttypes.0001_initial... OK</span><br><span class=\"line\">  Applying auth.0001_initial... OK</span><br><span class=\"line\">  Applying admin.0001_initial... OK</span><br><span class=\"line\">  Applying admin.0002_logentry_remove_auto_add... OK</span><br><span class=\"line\">  Applying contenttypes.0002_remove_content_type_name... OK</span><br><span class=\"line\">  Applying auth.0002_alter_permission_name_max_length... OK</span><br><span class=\"line\">  Applying auth.0003_alter_user_email_max_length... OK</span><br><span class=\"line\">  Applying auth.0004_alter_user_username_opts... OK</span><br><span class=\"line\">  Applying auth.0005_alter_user_last_login_null... OK</span><br><span class=\"line\">  Applying auth.0006_require_contenttypes_0002... OK</span><br><span class=\"line\">  Applying auth.0007_alter_validators_add_error_messages... OK</span><br><span class=\"line\">  Applying auth.0008_alter_user_username_max_length... OK</span><br><span class=\"line\">  Applying sessions.0001_initial... OK</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"要有静态资源\"><a href=\"#要有静态资源\" class=\"headerlink\" title=\"要有静态资源\"></a>要有静态资源</h2><p>将所有静态资源全部放入templates<br>修改settings.py中的静态文件位置配置</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">STATIC_URL = <span class=\"string\">'/templates/'</span></span><br><span class=\"line\">STATICFILES_DIRS = (</span><br><span class=\"line\">    os.path.join(BASE_DIR, <span class=\"string\">\"templates\"</span>),</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<p>在TEMPLATES的DIRS项中增加templates文件夹</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TEMPLATES = [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"string\">'BACKEND'</span>: <span class=\"string\">'django.template.backends.django.DjangoTemplates'</span>,</span><br><span class=\"line\">        <span class=\"comment\"># 只有这个templates是我添加的哦</span></span><br><span class=\"line\">        <span class=\"string\">'DIRS'</span>: [<span class=\"string\">'templates'</span>],</span><br><span class=\"line\">        <span class=\"string\">'APP_DIRS'</span>: <span class=\"literal\">True</span>,</span><br><span class=\"line\">        <span class=\"string\">'OPTIONS'</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">'context_processors'</span>: [</span><br><span class=\"line\">                <span class=\"string\">'django.template.context_processors.debug'</span>,</span><br><span class=\"line\">                <span class=\"string\">'django.template.context_processors.request'</span>,</span><br><span class=\"line\">                <span class=\"string\">'django.contrib.auth.context_processors.auth'</span>,</span><br><span class=\"line\">                <span class=\"string\">'django.contrib.messages.context_processors.messages'</span>,</span><br><span class=\"line\">            ],</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"要有路由\"><a href=\"#要有路由\" class=\"headerlink\" title=\"要有路由\"></a>要有路由</h2><p>在project的urls.py文件中添加我们的路由</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">    url(<span class=\"string\">r'^admin/'</span>, admin.site.urls),</span><br><span class=\"line\">    <span class=\"comment\"># 将knowledgepay这个url导向server这个app,让它自己处理</span></span><br><span class=\"line\">    url(<span class=\"string\">r'^knowledgepay/'</span>, include(<span class=\"string\">'server.urls'</span>, namespace=<span class=\"string\">\"server\"</span>)),</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<p>在我们自己的app中创建一个urls.py, 定义app内部自己的路由</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 这是app内部的路由</span></span><br><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">    url(<span class=\"string\">r'^$'</span>, views.homepage),</span><br><span class=\"line\">    url(<span class=\"string\">r'^home'</span>, views.homepage),</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<p>在我们自己app的views.py文件中定义各种视图处理器</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Create your views here.</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">homepage</span><span class=\"params\">(request)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_to_response(<span class=\"string\">'login.html'</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"发挥吧\"><a href=\"#发挥吧\" class=\"headerlink\" title=\"发挥吧\"></a>发挥吧</h2><p>上面已经把基本的框架都搭好了.我们已经可以</p>\n<ul>\n<li>可以对url进行路由</li>\n<li>可以访问静态html文件</li>\n<li>可以访问数据库</li>\n<li>可以访问自定义的逻辑处理方法</li>\n</ul>\n<p>剩下的就是纯粹业务上的事情了.</p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><p>如果觉得上面有些地方前后没有联系起来, 那么可以结合下面这个简单的菜鸟教程看看</p>\n<p><a href=\"https://www.runoob.com/django/django-tutorial.html\" target=\"_blank\" rel=\"noopener\">https://www.runoob.com/django/django-tutorial.html</a></p>\n<p>要详细了解, 这里还有Djang中文版文档可供参阅</p>\n<p><a href=\"https://docs.djangoproject.com/zh-hans/2.2/intro/\" target=\"_blank\" rel=\"noopener\">https://docs.djangoproject.com/zh-hans/2.2/intro/</a></p>\n<p>当然这里还有Django book的中文版翻译, 供君选择</p>\n<p><a href=\"http://docs.30c.org/djangobook2/index.html\" target=\"_blank\" rel=\"noopener\">http://docs.30c.org/djangobook2/index.html</a></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"要有project\"><a href=\"#要有project\" class=\"headerlink\" title=\"要有project\"></a>要有project</h2><p>创建一个基本的Project, 这样我们才能开始工作</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">django-admin startproject &lt;工程名&gt;</span><br></pre></td></tr></table></figure>","more":"<h2 id=\"要能访问数据库\"><a href=\"#要能访问数据库\" class=\"headerlink\" title=\"要能访问数据库\"></a>要能访问数据库</h2><p>Django说, 要访问数据库必须创建app和model, 于是, 我们开始创建</p>\n<ul>\n<li><p>首先配置好数据库</p>\n<p>在settings.py中加上自己的数据库配置</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DATABASES = &#123;   </span><br><span class=\"line\">    <span class=\"string\">'default'</span>: &#123;        </span><br><span class=\"line\">        <span class=\"string\">'ENGINE'</span>: <span class=\"string\">'django.db.backends.sqlite3'</span>,       </span><br><span class=\"line\">        <span class=\"string\">'NAME'</span>: os.path.join(BASE_DIR, <span class=\"string\">'db.sqlite3'</span>),    </span><br><span class=\"line\">    &#125;,   </span><br><span class=\"line\">    <span class=\"comment\"># 如下是我的配置</span></span><br><span class=\"line\">    <span class=\"string\">'test'</span>: &#123;      </span><br><span class=\"line\">        <span class=\"string\">'ENGINE'</span>: <span class=\"string\">'django.db.backends.mysql'</span>,      </span><br><span class=\"line\">        <span class=\"string\">'NAME'</span>: <span class=\"string\">'test'</span>,      </span><br><span class=\"line\">        <span class=\"string\">'USER'</span>: <span class=\"string\">'test'</span>,        </span><br><span class=\"line\">        <span class=\"string\">'PASSWORD'</span>: <span class=\"string\">'test123'</span>,     </span><br><span class=\"line\">        <span class=\"string\">'HOST'</span>:<span class=\"string\">'localhost'</span>,      </span><br><span class=\"line\">        <span class=\"string\">'PORT'</span>:<span class=\"string\">'3306'</span>,   </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>然后定义好模型</p>\n<p>在manager.py文件同目录下, 执行如下命令创建app</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">django-admin startapp KnowledgePayModel</span><br></pre></td></tr></table></figure>\n\n<p>然后可以看到如下目录结构</p>\n<p>[外链图片转存失败(img-hy2fdU5Z-1566125816334)(/home/floyd/.config/Typora/typora-user-images/1566014155470.png)]</p>\n<p>然后在project的settings.py下注册刚刚创建的APP</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INSTALLED_APPS = [</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.admin'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.auth'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.contenttypes'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.sessions'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.messages'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.staticfiles'</span>,</span><br><span class=\"line\">    <span class=\"comment\"># 这是我们自己创建的APP</span></span><br><span class=\"line\">    <span class=\"string\">'KnowledgePayModel'</span>,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<p>然后执行如下命令从现有数据表中导出模型</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python manager.py inspectdb 表名</span><br></pre></td></tr></table></figure>\n\n<p>我使用django + psycopg2 2.8.3执行上述命令时出现如下错误</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.db <span class=\"keyword\">import</span> models</span><br><span class=\"line\"><span class=\"comment\"># Unable to inspect table 'payalbum'</span></span><br><span class=\"line\"><span class=\"comment\"># The error was: sequence index must be integer, not 'slice'</span></span><br><span class=\"line\"><span class=\"comment\"># Unable to inspect table 'paycomment'</span></span><br><span class=\"line\"><span class=\"comment\"># The error was: sequence index must be integer, not 'slice'</span></span><br><span class=\"line\"><span class=\"comment\"># Unable to inspect table 'payprice'</span></span><br><span class=\"line\"><span class=\"comment\"># The error was: sequence index must be integer, not 'slice'</span></span><br><span class=\"line\"><span class=\"comment\"># Unable to inspect table 'payvideo'</span></span><br><span class=\"line\"><span class=\"comment\"># The error was: sequence index must be integer, not 'slice'</span></span><br></pre></td></tr></table></figure>\n\n<p>网上查询是版本兼容有问题, 于是将psycopg强制降级</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo pip install psycopg2==2.7.7 --force-reinstall</span><br></pre></td></tr></table></figure>\n\n<p>然后就可以正常工作了, 结果如下, 将其复制到models.py中, 然后进行适当的修改即可使用. 注意生成的AutoField一定要指定为主键, 否则Django会认为没有主键, 从在再隐式给你加一个, 然后就会报说一个model中只能有一个AutoField域.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># This is an auto-generated Django model module.</span></span><br><span class=\"line\"><span class=\"comment\"># You'll have to do the following manually to clean this up:</span></span><br><span class=\"line\"><span class=\"comment\">#   * Rearrange models' order</span></span><br><span class=\"line\"><span class=\"comment\">#   * Make sure each model has one field with primary_key=True</span></span><br><span class=\"line\"><span class=\"comment\">#   * Make sure each ForeignKey has `on_delete` set to the desired behavior.</span></span><br><span class=\"line\"><span class=\"comment\">#   * Remove `managed = False` lines if you wish to allow Django to create, modify, and delete the table</span></span><br><span class=\"line\"><span class=\"comment\"># Feel free to rename the models, but don't rename db_table values or field names.</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> __future__ <span class=\"keyword\">import</span> unicode_literals</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> django.db <span class=\"keyword\">import</span> models</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Payalbum</span><span class=\"params\">(models.Model)</span>:</span></span><br><span class=\"line\">    id = models.AutoField()</span><br><span class=\"line\">    data = models.TextField()  <span class=\"comment\"># This field type is a guess.</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Meta</span>:</span></span><br><span class=\"line\">        managed = <span class=\"literal\">False</span></span><br><span class=\"line\">        db_table = <span class=\"string\">'payalbum'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Paycomment</span><span class=\"params\">(models.Model)</span>:</span></span><br><span class=\"line\">    id = models.AutoField()</span><br><span class=\"line\">    data = models.TextField()  <span class=\"comment\"># This field type is a guess.</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Meta</span>:</span></span><br><span class=\"line\">        managed = <span class=\"literal\">False</span></span><br><span class=\"line\">        db_table = <span class=\"string\">'paycomment'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Payprice</span><span class=\"params\">(models.Model)</span>:</span></span><br><span class=\"line\">    id = models.AutoField()</span><br><span class=\"line\">    data = models.TextField()  <span class=\"comment\"># This field type is a guess.</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Meta</span>:</span></span><br><span class=\"line\">        managed = <span class=\"literal\">False</span></span><br><span class=\"line\">        db_table = <span class=\"string\">'payprice'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Payvideo</span><span class=\"params\">(models.Model)</span>:</span></span><br><span class=\"line\">    id = models.AutoField()</span><br><span class=\"line\">    data = models.TextField()  <span class=\"comment\"># This field type is a guess.</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Meta</span>:</span></span><br><span class=\"line\">        managed = <span class=\"literal\">False</span></span><br><span class=\"line\">        db_table = <span class=\"string\">'payvideo'</span></span><br></pre></td></tr></table></figure>\n\n<p>如果想要使用Django自带的权限表之类的, 需要执行如下语句, 来生成一系列表</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python manager.py migrate</span><br></pre></td></tr></table></figure>\n\n<p>控制台执行结果如下:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Operations to perform:</span><br><span class=\"line\">  Apply all migrations: admin, auth, contenttypes, sessions</span><br><span class=\"line\">Running migrations:</span><br><span class=\"line\">  Applying contenttypes.0001_initial... OK</span><br><span class=\"line\">  Applying auth.0001_initial... OK</span><br><span class=\"line\">  Applying admin.0001_initial... OK</span><br><span class=\"line\">  Applying admin.0002_logentry_remove_auto_add... OK</span><br><span class=\"line\">  Applying contenttypes.0002_remove_content_type_name... OK</span><br><span class=\"line\">  Applying auth.0002_alter_permission_name_max_length... OK</span><br><span class=\"line\">  Applying auth.0003_alter_user_email_max_length... OK</span><br><span class=\"line\">  Applying auth.0004_alter_user_username_opts... OK</span><br><span class=\"line\">  Applying auth.0005_alter_user_last_login_null... OK</span><br><span class=\"line\">  Applying auth.0006_require_contenttypes_0002... OK</span><br><span class=\"line\">  Applying auth.0007_alter_validators_add_error_messages... OK</span><br><span class=\"line\">  Applying auth.0008_alter_user_username_max_length... OK</span><br><span class=\"line\">  Applying sessions.0001_initial... OK</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"要有静态资源\"><a href=\"#要有静态资源\" class=\"headerlink\" title=\"要有静态资源\"></a>要有静态资源</h2><p>将所有静态资源全部放入templates<br>修改settings.py中的静态文件位置配置</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">STATIC_URL = <span class=\"string\">'/templates/'</span></span><br><span class=\"line\">STATICFILES_DIRS = (</span><br><span class=\"line\">    os.path.join(BASE_DIR, <span class=\"string\">\"templates\"</span>),</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<p>在TEMPLATES的DIRS项中增加templates文件夹</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TEMPLATES = [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"string\">'BACKEND'</span>: <span class=\"string\">'django.template.backends.django.DjangoTemplates'</span>,</span><br><span class=\"line\">        <span class=\"comment\"># 只有这个templates是我添加的哦</span></span><br><span class=\"line\">        <span class=\"string\">'DIRS'</span>: [<span class=\"string\">'templates'</span>],</span><br><span class=\"line\">        <span class=\"string\">'APP_DIRS'</span>: <span class=\"literal\">True</span>,</span><br><span class=\"line\">        <span class=\"string\">'OPTIONS'</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">'context_processors'</span>: [</span><br><span class=\"line\">                <span class=\"string\">'django.template.context_processors.debug'</span>,</span><br><span class=\"line\">                <span class=\"string\">'django.template.context_processors.request'</span>,</span><br><span class=\"line\">                <span class=\"string\">'django.contrib.auth.context_processors.auth'</span>,</span><br><span class=\"line\">                <span class=\"string\">'django.contrib.messages.context_processors.messages'</span>,</span><br><span class=\"line\">            ],</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"要有路由\"><a href=\"#要有路由\" class=\"headerlink\" title=\"要有路由\"></a>要有路由</h2><p>在project的urls.py文件中添加我们的路由</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">    url(<span class=\"string\">r'^admin/'</span>, admin.site.urls),</span><br><span class=\"line\">    <span class=\"comment\"># 将knowledgepay这个url导向server这个app,让它自己处理</span></span><br><span class=\"line\">    url(<span class=\"string\">r'^knowledgepay/'</span>, include(<span class=\"string\">'server.urls'</span>, namespace=<span class=\"string\">\"server\"</span>)),</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<p>在我们自己的app中创建一个urls.py, 定义app内部自己的路由</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 这是app内部的路由</span></span><br><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">    url(<span class=\"string\">r'^$'</span>, views.homepage),</span><br><span class=\"line\">    url(<span class=\"string\">r'^home'</span>, views.homepage),</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<p>在我们自己app的views.py文件中定义各种视图处理器</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Create your views here.</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">homepage</span><span class=\"params\">(request)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_to_response(<span class=\"string\">'login.html'</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"发挥吧\"><a href=\"#发挥吧\" class=\"headerlink\" title=\"发挥吧\"></a>发挥吧</h2><p>上面已经把基本的框架都搭好了.我们已经可以</p>\n<ul>\n<li>可以对url进行路由</li>\n<li>可以访问静态html文件</li>\n<li>可以访问数据库</li>\n<li>可以访问自定义的逻辑处理方法</li>\n</ul>\n<p>剩下的就是纯粹业务上的事情了.</p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><p>如果觉得上面有些地方前后没有联系起来, 那么可以结合下面这个简单的菜鸟教程看看</p>\n<p><a href=\"https://www.runoob.com/django/django-tutorial.html\" target=\"_blank\" rel=\"noopener\">https://www.runoob.com/django/django-tutorial.html</a></p>\n<p>要详细了解, 这里还有Djang中文版文档可供参阅</p>\n<p><a href=\"https://docs.djangoproject.com/zh-hans/2.2/intro/\" target=\"_blank\" rel=\"noopener\">https://docs.djangoproject.com/zh-hans/2.2/intro/</a></p>\n<p>当然这里还有Django book的中文版翻译, 供君选择</p>\n<p><a href=\"http://docs.30c.org/djangobook2/index.html\" target=\"_blank\" rel=\"noopener\">http://docs.30c.org/djangobook2/index.html</a></p>"},{"title":"我有点想要写博客了","date":"2019-09-06T14:31:33.000Z","_content":"> 自从入职新公司，在印象中应该是一直没有打开过自己的CSDN主页，甚至完全忘记了自己还有一个博客这件事。\n> 今天偶然间看到一篇博文，说的是搭建一个自己的博客。想着自己也一直有着这样的想法，于是回来看了看。并想着：我得重新开始写博客\n<!-- more -->\n## 这篇博文的目的\n这就是一个随笔，不是技术文章\n## 这段时间干啥了\n翻看了一下记录，上次写博客已经是非常久以前了，多久呢，得追溯到四月份。从年前开始，我一直在筹备着换工作，原来在一家外包公司，着实没有什么发展前途，学不到什么东西，博主这渣渣水平在里面都算优秀的。于是年假一回来就提了辞呈，领导也很痛快，反正外包公司不愁没人。\n三月中旬正式离职，两份工作之间间隔了整整一个月。前两周结合离职前几个失败的面试经历整理了一下技能树，补充了一些急需的知识盲区。第三周正式开始投简历找工作，统计了一下，前后面试了十几家公司，实力所限，没有大厂。不过最终也拿到了令人满意的offer。\n我算是一个半路出家的Coder，以前是做硬件的，自学得来的技术栈也相当有限，第一份工作对自己提升实在有限。新公司所用技术比较新，可以说入司时的技术栈和公司使用的技术栈唯一重合点就是Java这门语言以及一些通用知识，所以免不得很忙，哪怕工作还算轻松，但多数时间都花在学习上。\n新的工作氛围和新同事都很棒。技术氛围浓厚，尽管我尚未适应，但这就是我想要的。在这里我新学习了很多好玩的东西：函数式编程、Kotlin语言、Vertx、Postgresql、Python、Django、Rxjava。一个项目里根据不同的需要，尽量结合各种技术的优点加以应用，有很大灵活空间。这在我之前是很难想象的，以前无论是看各种网络教程还是Java相关文章，学习路线大多千篇一律，且看起来枯燥乏味。现在有了新的思路：去接触更多好玩的技术，学习它所专注解决的问题。技术不断在演进，要让自己跟着时代走。\n## 怎么想起写博客了\n今天看到一篇博文，有一句话：不会分享的程序员技术实力再强大，最终也只能做一个Coder。这不一定对，但我认为非常好。\n### 从技术分享说起\n新公司有个不成文的规定，每个员工都要做技术分享，轮着来。之前由于自己确实太渣，学习都来不及，也没啥可分享给别人的，就一直没做。现在转正了，不做也确实说不过去。于是想着就分享Kotlin吧，虽然也是新学习的，但好歹用了一个多月了。\n进入准备PPT阶段，自己头脑中有无数个想法，感觉能够讲的点很多，但真到写PPT时，竟然不知道该从何写起。而且针对每个技术点，也只能三言两语进行描述，无法深层次地进行解释。于是一个一个问题地钻，并进行记录，我第一次如此深切地感受到通过记录进行知识梳理能够如此有用。\n试想：如果针对自己学习的每一门知识，在学完之后都通过整理PPT的方式进行知识梳理，这应该会解决很多原本一知半解的问题。对技术实力的提升是很有帮助的\n### 我的一篇博文访问量破了1.8W\n这是我万万没想到的事情，随便写一写的博文竟然会有1.8W的访问量，而且有好几个评论和点赞。第一次感受到通过网络文章给自己带来的快乐。这让我觉得，花时间和经历维护一个博客获取是一件不错的事情。\n### 自己搭建网站\n前段时间参加公司发起的阿里云团购，买了一台ECS，想着也没有别的用途，也不能浪费，那就搭建一个自己的网站吧，毕竟不能浪费钱。而且自己建站也不是空穴来风，这个想法都想了很久了。那篇1.8W访问量的博文就是在之前准备网页时写的。\n最初是想从零开始搭建，现在想想也是没啥意义，完全可以使用WordPress或DJango搭建嘛，这样周期较短，自己也不容易被劝退。\n### 立个Flag\n一个月内自己的网站要建好，且每个月最少发布两篇博文，CSDN和自建网站同步更新。\n网友提的问题必须要回答（CKEditor的问题，恕在下实在忘记了，无法回答）\n\n","source":"_posts/我有点想要写博客了.md","raw":"---\ntitle: 我有点想要写博客了\ndate: 2019-09-06 22:31:33\ntags: \n    - 随笔\n    - 博客\ncategories: \n    - 随笔\n---\n> 自从入职新公司，在印象中应该是一直没有打开过自己的CSDN主页，甚至完全忘记了自己还有一个博客这件事。\n> 今天偶然间看到一篇博文，说的是搭建一个自己的博客。想着自己也一直有着这样的想法，于是回来看了看。并想着：我得重新开始写博客\n<!-- more -->\n## 这篇博文的目的\n这就是一个随笔，不是技术文章\n## 这段时间干啥了\n翻看了一下记录，上次写博客已经是非常久以前了，多久呢，得追溯到四月份。从年前开始，我一直在筹备着换工作，原来在一家外包公司，着实没有什么发展前途，学不到什么东西，博主这渣渣水平在里面都算优秀的。于是年假一回来就提了辞呈，领导也很痛快，反正外包公司不愁没人。\n三月中旬正式离职，两份工作之间间隔了整整一个月。前两周结合离职前几个失败的面试经历整理了一下技能树，补充了一些急需的知识盲区。第三周正式开始投简历找工作，统计了一下，前后面试了十几家公司，实力所限，没有大厂。不过最终也拿到了令人满意的offer。\n我算是一个半路出家的Coder，以前是做硬件的，自学得来的技术栈也相当有限，第一份工作对自己提升实在有限。新公司所用技术比较新，可以说入司时的技术栈和公司使用的技术栈唯一重合点就是Java这门语言以及一些通用知识，所以免不得很忙，哪怕工作还算轻松，但多数时间都花在学习上。\n新的工作氛围和新同事都很棒。技术氛围浓厚，尽管我尚未适应，但这就是我想要的。在这里我新学习了很多好玩的东西：函数式编程、Kotlin语言、Vertx、Postgresql、Python、Django、Rxjava。一个项目里根据不同的需要，尽量结合各种技术的优点加以应用，有很大灵活空间。这在我之前是很难想象的，以前无论是看各种网络教程还是Java相关文章，学习路线大多千篇一律，且看起来枯燥乏味。现在有了新的思路：去接触更多好玩的技术，学习它所专注解决的问题。技术不断在演进，要让自己跟着时代走。\n## 怎么想起写博客了\n今天看到一篇博文，有一句话：不会分享的程序员技术实力再强大，最终也只能做一个Coder。这不一定对，但我认为非常好。\n### 从技术分享说起\n新公司有个不成文的规定，每个员工都要做技术分享，轮着来。之前由于自己确实太渣，学习都来不及，也没啥可分享给别人的，就一直没做。现在转正了，不做也确实说不过去。于是想着就分享Kotlin吧，虽然也是新学习的，但好歹用了一个多月了。\n进入准备PPT阶段，自己头脑中有无数个想法，感觉能够讲的点很多，但真到写PPT时，竟然不知道该从何写起。而且针对每个技术点，也只能三言两语进行描述，无法深层次地进行解释。于是一个一个问题地钻，并进行记录，我第一次如此深切地感受到通过记录进行知识梳理能够如此有用。\n试想：如果针对自己学习的每一门知识，在学完之后都通过整理PPT的方式进行知识梳理，这应该会解决很多原本一知半解的问题。对技术实力的提升是很有帮助的\n### 我的一篇博文访问量破了1.8W\n这是我万万没想到的事情，随便写一写的博文竟然会有1.8W的访问量，而且有好几个评论和点赞。第一次感受到通过网络文章给自己带来的快乐。这让我觉得，花时间和经历维护一个博客获取是一件不错的事情。\n### 自己搭建网站\n前段时间参加公司发起的阿里云团购，买了一台ECS，想着也没有别的用途，也不能浪费，那就搭建一个自己的网站吧，毕竟不能浪费钱。而且自己建站也不是空穴来风，这个想法都想了很久了。那篇1.8W访问量的博文就是在之前准备网页时写的。\n最初是想从零开始搭建，现在想想也是没啥意义，完全可以使用WordPress或DJango搭建嘛，这样周期较短，自己也不容易被劝退。\n### 立个Flag\n一个月内自己的网站要建好，且每个月最少发布两篇博文，CSDN和自建网站同步更新。\n网友提的问题必须要回答（CKEditor的问题，恕在下实在忘记了，无法回答）\n\n","slug":"我有点想要写博客了","published":1,"updated":"2019-09-07T03:31:12.904Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0985g8n0006r9bn54068vxc","content":"<blockquote>\n<p>自从入职新公司，在印象中应该是一直没有打开过自己的CSDN主页，甚至完全忘记了自己还有一个博客这件事。<br>今天偶然间看到一篇博文，说的是搭建一个自己的博客。想着自己也一直有着这样的想法，于是回来看了看。并想着：我得重新开始写博客</p>\n</blockquote>\n<a id=\"more\"></a>\n<h2 id=\"这篇博文的目的\"><a href=\"#这篇博文的目的\" class=\"headerlink\" title=\"这篇博文的目的\"></a>这篇博文的目的</h2><p>这就是一个随笔，不是技术文章</p>\n<h2 id=\"这段时间干啥了\"><a href=\"#这段时间干啥了\" class=\"headerlink\" title=\"这段时间干啥了\"></a>这段时间干啥了</h2><p>翻看了一下记录，上次写博客已经是非常久以前了，多久呢，得追溯到四月份。从年前开始，我一直在筹备着换工作，原来在一家外包公司，着实没有什么发展前途，学不到什么东西，博主这渣渣水平在里面都算优秀的。于是年假一回来就提了辞呈，领导也很痛快，反正外包公司不愁没人。<br>三月中旬正式离职，两份工作之间间隔了整整一个月。前两周结合离职前几个失败的面试经历整理了一下技能树，补充了一些急需的知识盲区。第三周正式开始投简历找工作，统计了一下，前后面试了十几家公司，实力所限，没有大厂。不过最终也拿到了令人满意的offer。<br>我算是一个半路出家的Coder，以前是做硬件的，自学得来的技术栈也相当有限，第一份工作对自己提升实在有限。新公司所用技术比较新，可以说入司时的技术栈和公司使用的技术栈唯一重合点就是Java这门语言以及一些通用知识，所以免不得很忙，哪怕工作还算轻松，但多数时间都花在学习上。<br>新的工作氛围和新同事都很棒。技术氛围浓厚，尽管我尚未适应，但这就是我想要的。在这里我新学习了很多好玩的东西：函数式编程、Kotlin语言、Vertx、Postgresql、Python、Django、Rxjava。一个项目里根据不同的需要，尽量结合各种技术的优点加以应用，有很大灵活空间。这在我之前是很难想象的，以前无论是看各种网络教程还是Java相关文章，学习路线大多千篇一律，且看起来枯燥乏味。现在有了新的思路：去接触更多好玩的技术，学习它所专注解决的问题。技术不断在演进，要让自己跟着时代走。</p>\n<h2 id=\"怎么想起写博客了\"><a href=\"#怎么想起写博客了\" class=\"headerlink\" title=\"怎么想起写博客了\"></a>怎么想起写博客了</h2><p>今天看到一篇博文，有一句话：不会分享的程序员技术实力再强大，最终也只能做一个Coder。这不一定对，但我认为非常好。</p>\n<h3 id=\"从技术分享说起\"><a href=\"#从技术分享说起\" class=\"headerlink\" title=\"从技术分享说起\"></a>从技术分享说起</h3><p>新公司有个不成文的规定，每个员工都要做技术分享，轮着来。之前由于自己确实太渣，学习都来不及，也没啥可分享给别人的，就一直没做。现在转正了，不做也确实说不过去。于是想着就分享Kotlin吧，虽然也是新学习的，但好歹用了一个多月了。<br>进入准备PPT阶段，自己头脑中有无数个想法，感觉能够讲的点很多，但真到写PPT时，竟然不知道该从何写起。而且针对每个技术点，也只能三言两语进行描述，无法深层次地进行解释。于是一个一个问题地钻，并进行记录，我第一次如此深切地感受到通过记录进行知识梳理能够如此有用。<br>试想：如果针对自己学习的每一门知识，在学完之后都通过整理PPT的方式进行知识梳理，这应该会解决很多原本一知半解的问题。对技术实力的提升是很有帮助的</p>\n<h3 id=\"我的一篇博文访问量破了1-8W\"><a href=\"#我的一篇博文访问量破了1-8W\" class=\"headerlink\" title=\"我的一篇博文访问量破了1.8W\"></a>我的一篇博文访问量破了1.8W</h3><p>这是我万万没想到的事情，随便写一写的博文竟然会有1.8W的访问量，而且有好几个评论和点赞。第一次感受到通过网络文章给自己带来的快乐。这让我觉得，花时间和经历维护一个博客获取是一件不错的事情。</p>\n<h3 id=\"自己搭建网站\"><a href=\"#自己搭建网站\" class=\"headerlink\" title=\"自己搭建网站\"></a>自己搭建网站</h3><p>前段时间参加公司发起的阿里云团购，买了一台ECS，想着也没有别的用途，也不能浪费，那就搭建一个自己的网站吧，毕竟不能浪费钱。而且自己建站也不是空穴来风，这个想法都想了很久了。那篇1.8W访问量的博文就是在之前准备网页时写的。<br>最初是想从零开始搭建，现在想想也是没啥意义，完全可以使用WordPress或DJango搭建嘛，这样周期较短，自己也不容易被劝退。</p>\n<h3 id=\"立个Flag\"><a href=\"#立个Flag\" class=\"headerlink\" title=\"立个Flag\"></a>立个Flag</h3><p>一个月内自己的网站要建好，且每个月最少发布两篇博文，CSDN和自建网站同步更新。<br>网友提的问题必须要回答（CKEditor的问题，恕在下实在忘记了，无法回答）</p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>自从入职新公司，在印象中应该是一直没有打开过自己的CSDN主页，甚至完全忘记了自己还有一个博客这件事。<br>今天偶然间看到一篇博文，说的是搭建一个自己的博客。想着自己也一直有着这样的想法，于是回来看了看。并想着：我得重新开始写博客</p>\n</blockquote>","more":"<h2 id=\"这篇博文的目的\"><a href=\"#这篇博文的目的\" class=\"headerlink\" title=\"这篇博文的目的\"></a>这篇博文的目的</h2><p>这就是一个随笔，不是技术文章</p>\n<h2 id=\"这段时间干啥了\"><a href=\"#这段时间干啥了\" class=\"headerlink\" title=\"这段时间干啥了\"></a>这段时间干啥了</h2><p>翻看了一下记录，上次写博客已经是非常久以前了，多久呢，得追溯到四月份。从年前开始，我一直在筹备着换工作，原来在一家外包公司，着实没有什么发展前途，学不到什么东西，博主这渣渣水平在里面都算优秀的。于是年假一回来就提了辞呈，领导也很痛快，反正外包公司不愁没人。<br>三月中旬正式离职，两份工作之间间隔了整整一个月。前两周结合离职前几个失败的面试经历整理了一下技能树，补充了一些急需的知识盲区。第三周正式开始投简历找工作，统计了一下，前后面试了十几家公司，实力所限，没有大厂。不过最终也拿到了令人满意的offer。<br>我算是一个半路出家的Coder，以前是做硬件的，自学得来的技术栈也相当有限，第一份工作对自己提升实在有限。新公司所用技术比较新，可以说入司时的技术栈和公司使用的技术栈唯一重合点就是Java这门语言以及一些通用知识，所以免不得很忙，哪怕工作还算轻松，但多数时间都花在学习上。<br>新的工作氛围和新同事都很棒。技术氛围浓厚，尽管我尚未适应，但这就是我想要的。在这里我新学习了很多好玩的东西：函数式编程、Kotlin语言、Vertx、Postgresql、Python、Django、Rxjava。一个项目里根据不同的需要，尽量结合各种技术的优点加以应用，有很大灵活空间。这在我之前是很难想象的，以前无论是看各种网络教程还是Java相关文章，学习路线大多千篇一律，且看起来枯燥乏味。现在有了新的思路：去接触更多好玩的技术，学习它所专注解决的问题。技术不断在演进，要让自己跟着时代走。</p>\n<h2 id=\"怎么想起写博客了\"><a href=\"#怎么想起写博客了\" class=\"headerlink\" title=\"怎么想起写博客了\"></a>怎么想起写博客了</h2><p>今天看到一篇博文，有一句话：不会分享的程序员技术实力再强大，最终也只能做一个Coder。这不一定对，但我认为非常好。</p>\n<h3 id=\"从技术分享说起\"><a href=\"#从技术分享说起\" class=\"headerlink\" title=\"从技术分享说起\"></a>从技术分享说起</h3><p>新公司有个不成文的规定，每个员工都要做技术分享，轮着来。之前由于自己确实太渣，学习都来不及，也没啥可分享给别人的，就一直没做。现在转正了，不做也确实说不过去。于是想着就分享Kotlin吧，虽然也是新学习的，但好歹用了一个多月了。<br>进入准备PPT阶段，自己头脑中有无数个想法，感觉能够讲的点很多，但真到写PPT时，竟然不知道该从何写起。而且针对每个技术点，也只能三言两语进行描述，无法深层次地进行解释。于是一个一个问题地钻，并进行记录，我第一次如此深切地感受到通过记录进行知识梳理能够如此有用。<br>试想：如果针对自己学习的每一门知识，在学完之后都通过整理PPT的方式进行知识梳理，这应该会解决很多原本一知半解的问题。对技术实力的提升是很有帮助的</p>\n<h3 id=\"我的一篇博文访问量破了1-8W\"><a href=\"#我的一篇博文访问量破了1-8W\" class=\"headerlink\" title=\"我的一篇博文访问量破了1.8W\"></a>我的一篇博文访问量破了1.8W</h3><p>这是我万万没想到的事情，随便写一写的博文竟然会有1.8W的访问量，而且有好几个评论和点赞。第一次感受到通过网络文章给自己带来的快乐。这让我觉得，花时间和经历维护一个博客获取是一件不错的事情。</p>\n<h3 id=\"自己搭建网站\"><a href=\"#自己搭建网站\" class=\"headerlink\" title=\"自己搭建网站\"></a>自己搭建网站</h3><p>前段时间参加公司发起的阿里云团购，买了一台ECS，想着也没有别的用途，也不能浪费，那就搭建一个自己的网站吧，毕竟不能浪费钱。而且自己建站也不是空穴来风，这个想法都想了很久了。那篇1.8W访问量的博文就是在之前准备网页时写的。<br>最初是想从零开始搭建，现在想想也是没啥意义，完全可以使用WordPress或DJango搭建嘛，这样周期较短，自己也不容易被劝退。</p>\n<h3 id=\"立个Flag\"><a href=\"#立个Flag\" class=\"headerlink\" title=\"立个Flag\"></a>立个Flag</h3><p>一个月内自己的网站要建好，且每个月最少发布两篇博文，CSDN和自建网站同步更新。<br>网友提的问题必须要回答（CKEditor的问题，恕在下实在忘记了，无法回答）</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"ck0985g8f0000r9bn3q6u3b0m","category_id":"ck0985g8l0004r9bnz1tngbaf","_id":"ck0985g8r000br9bnb8gxsm7q"},{"post_id":"ck0985g8j0002r9bnnafyrvmj","category_id":"ck0985g8p0008r9bniqewejz0","_id":"ck0985g8r000fr9bnloz04glv"},{"post_id":"ck0985g8n0006r9bn54068vxc","category_id":"ck0985g8r000cr9bn599tnu2y","_id":"ck0985g8s000hr9bndsba9yhx"}],"PostTag":[{"post_id":"ck0985g8f0000r9bn3q6u3b0m","tag_id":"ck0985g8m0005r9bn9j114hg6","_id":"ck0985g8q000ar9bnsgbixcpn"},{"post_id":"ck0985g8j0002r9bnnafyrvmj","tag_id":"ck0985g8p0009r9bnlemto2zc","_id":"ck0985g8r000er9bn57gqn453"},{"post_id":"ck0985g8n0006r9bn54068vxc","tag_id":"ck0985g8r000dr9bnazriruu3","_id":"ck0985g8s000ir9bnxxp8wsdo"},{"post_id":"ck0985g8n0006r9bn54068vxc","tag_id":"ck0985g8r000gr9bn03wfh98s","_id":"ck0985g8t000jr9bn0p2pj0m1"}],"Tag":[{"name":"git","_id":"ck0985g8m0005r9bn9j114hg6"},{"name":"django","_id":"ck0985g8p0009r9bnlemto2zc"},{"name":"随笔","_id":"ck0985g8r000dr9bnazriruu3"},{"name":"博客","_id":"ck0985g8r000gr9bn03wfh98s"}]}}